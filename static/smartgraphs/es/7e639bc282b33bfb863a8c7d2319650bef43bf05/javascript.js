(function(){var a="sproutcore/ace";if(!SC.BUNDLE_INFO){throw"SC.BUNDLE_INFO is not defined!"
}if(SC.BUNDLE_INFO[a]){return}SC.BUNDLE_INFO[a]={requires:["sproutcore/empty_theme"],styles:["/static/sproutcore/ace/es/71fef724301b04e00df8643ac18a190f56ab68a0/stylesheet-packed.css","/static/sproutcore/ace/es/71fef724301b04e00df8643ac18a190f56ab68a0/stylesheet.css"],scripts:["/static/sproutcore/ace/es/71fef724301b04e00df8643ac18a190f56ab68a0/javascript-packed.js","/static/sproutcore/ace/es/71fef724301b04e00df8643ac18a190f56ab68a0/javascript.js"]}
})();Smartgraphs=SC.Application.create({NAMESPACE:"Smartgraphs",VERSION:"0.1.0",triggers:[],_nextGuid:1000,getNextGuid:function(){return this._nextGuid++
},trace:YES,useMockResponses:YES,logDataSource:NO});SC.CONTEXT_MENU_ENABLED=YES;Smartgraphs.activityController=SC.ObjectController.create({lookup:function(b){var a=this.get("context");
return(a.hasOwnProperty(b)?a[b]:undefined)},cleanup:function(){Smartgraphs.activityPageController.cleanup();
Smartgraphs.activityStepController.cleanup()},canGotoNextPage:NO});Smartgraphs.activityPageController=SC.ObjectController.create({lookup:function(b){var a=this.get("context");
return(a.hasOwnProperty(b)?a[b]:Smartgraphs.activityController.lookup(b))},cleanup:function(){Smartgraphs.firstGraphController.clear();
Smartgraphs.secondGraphController.clear();Smartgraphs.activityViewController.clear()
}});Smartgraphs.activityPagesController=SC.ArrayController.create({allowsMultipleSelection:NO,indexOfSelectedPage:function(){var a=this.get("selection");
var b=a.indexSetForSource(this);return(b?b.toArray().objectAt(0):undefined)}.property("selection","[]").cacheable(),pageInfo:function(){var a=this.get("indexOfSelectedPage");
var b=this.get("length");if(b===0||a===undefined){return""}return"Page "+(a+1)+" of "+b
}.property("indexOfSelectedPage","length").cacheable(),selectFirstPage:function(){if(this.get("length")>0){this.selectObject(this.objectAt(0))
}},selectNextPage:function(){var a=this.get("indexOfSelectedPage");if(a+1<this.get("length")){this.selectObject(this.objectAt(a+1))
}},isLastPage:function(){return(this.get("indexOfSelectedPage")>=(this.get("length")-1))
}.property("indexOfSelectedPage","length").cacheable()});Smartgraphs.activityStepController=SC.ObjectController.create({canSubmit:NO,showSubmitButton:NO,submissibilityInspectorInstance:null,begin:function(){this.enableSubmission();
SC.RunLoop.begin();Smartgraphs.responseTemplateController.set("content",null);SC.RunLoop.end();
Smartgraphs.responseTemplateController.set("content",this.get("responseTemplate"));
this.setupPanes();this.setupTriggers();this.executeCommands(this.get("startCommands"));
if(this.get("shouldWaitForSubmissibleResponse")){Smartgraphs.sendAction("waitForResponse")
}else{if(this.get("shouldFinishImmediately")){Smartgraphs.sendAction("submitStep")
}}},setupPanes:function(){var a=this.get("initialPaneConfig");if(a==="single"){Smartgraphs.sendAction("showSinglePane");
this.setupPane("single")}else{if(a==="split"){Smartgraphs.sendAction("showSplitPane");
this.setupPane("top");this.setupPane("bottom")}}},setupPane:function(c){if(c!=="single"&&c!=="top"&&c!=="bottom"){console.error('setupPane: invalid pane "'+c+'"');
return}var b=this.get(c+"Graph");if(b){Smartgraphs.sendAction("showGraph",this,{pane:c,graphId:b.get("id")})
}else{var a=this.get(c+"Image");if(a){Smartgraphs.sendAction("showImage",this,{pane:c,path:a})
}}},setupTriggers:function(){},handleSubmission:function(){var g=this.makeInspector("responseInspector");
if(g){var f=g.inspect();var e,b=this.get("responseBranches");for(var c=0,d=b.get("length");
c<d;c++){e=b.objectAt(c);if(Smartgraphs.evaluate(e.criterion,f)){Smartgraphs.sendAction("gotoStep",this,{stepId:e.step});
return}}}var a=this.get("defaultBranch");if(a){Smartgraphs.sendAction("gotoStep",this,{stepId:a.get("id")})
}},cleanup:function(){console.log("cleaning up");var a=this.get("submissibilityInspectorInstance");
if(a){a.stopWatching();a.removeObserver("value",this,this.checkSubmissibility);a.destroy()
}this.set("submissibilityInspectorInstance",null)},waitForResponse:function(){if(!this.get("submissibilityInspector")){this.enableSubmission()
}else{this.disableSubmission();this.setupSubmissibilityInspector()}},setupSubmissibilityInspector:function(){if(!this.get("submissibilityInspector")){this.enableSubmission();
return}var a=this.makeInspector("submissibilityInspector");if(!a){console.error("setupSubmissibilityInspector was called, but makeInspector could not make an inspector instance.");
return}this.set("submissibilityInspectorInstance",a);this._valueWasValid=null;a.addObserver("value",this,this.checkSubmissibility);
a.watch()},makeInspector:function(b){var c=this.get(b);if(!c){return NO}if(!c.type){return NO
}var a=SC.objectForPropertyPath(c.type);if(!a||!a.isClass){return NO}return a.create({config:c.config})
},checkSubmissibility:function(){var c=this.get("submissibilityInspectorInstance");
var b=c.get("value");var a=Smartgraphs.evaluate(this.get("submissibilityCriterion"),b);
console.log('evaluating "'+b+'" to: '+(a?"VALID":"NOT VALID"));if(a&&!this._valueWasValid){this.enableSubmission()
}else{if(this._valueWasValid&&!a){this.disableSubmission()}}this._valueWasValid=a
},executeCommands:function(a){var d;for(var b=0,c=a.length;b<c;b++){d=a[b];Smartgraphs.sendAction(d.action,this,d.literalArgs)
}},enableSubmission:function(){this.set("canSubmit",YES)},disableSubmission:function(){this.set("canSubmit",NO)
}});Smartgraphs.activityViewController=SC.ObjectController.create({dataViewNowShowing:null,topPaneNowShowing:null,bottomPaneNowShowing:null,singlePaneNowShowing:null,firstImageValue:null,secondImageValue:null,firstGraphPaneControls:null,secondGraphPaneControls:null,startControlIsVisible:NO,startControlIsEnabled:NO,startControlIsDefault:NO,stopControlIsVisible:NO,stopControlIsEnabled:NO,stopControlIsDefault:NO,clearControlIsVisible:NO,clearControlIsEnabled:NO,clearControlIsDefault:NO,paneIsSplit:null,canGotoNextPage:null,canGotoNextPageBinding:"Smartgraphs.activityController.canGotoNextPage",canSubmit:null,canSubmitBinding:"Smartgraphs.activityStepController.canSubmit",isFinalStep:null,isFinalStepBinding:"Smartgraphs.activityStepController.isFinalStep",hideSubmitButton:null,hideSubmitButtonBinding:"Smartgraphs.activityStepController.hideSubmitButton",nextButtonShouldSubmit:null,nextButtonShouldSubmitBinding:"Smartgraphs.activityStepController.nextButtonShouldSubmit",showSubmitButton:function(){return !(this.get("hideSubmitButton")||this.get("nextButtonShouldSubmit"))
}.property("hideSubmitButton","nextButtonShouldSubmit").cacheable(),enableSubmitButton:null,enableSubmitButtonBinding:"Smartgraphs.activityStepController.canSubmit",showNextPageButton:null,showNextPageButtonBinding:SC.Binding.not("Smartgraphs.activityPagesController.isLastPage"),enableNextPageButton:function(){return this.get("canGotoNextPage")||(this.get("isFinalStep")&&this.get("nextButtonShouldSubmit")&&this.get("canSubmit"))
}.property("canGotoNextPage","isFinalStep","nextButtonShouldSubmit","canSubmit").cacheable(),firstOrSecondFor:function(b){var a=this.get("paneIsSplit");
if((!a&&b==="single")||(a&&b==="top")){return"first"}if(a&&b==="bottom"){return"second"
}return NO},validPaneFor:function(b){var a=this.get("paneIsSplit");if((!a&&b==="single")||(a&&(b==="top"||b==="bottom"))){return b
}else{console.error('invalid pane "'+b+'"');return NO}},otherPaneFor:function(a){a=this.validPaneFor(a);
if(a==="bottom"){return"top"}if(a==="top"){return"bottom"}return NO},graphControllerFor:function(b){b=this.validPaneFor(b);
var a=this.firstOrSecondFor(b);if(a){return Smartgraphs.get(a+"GraphController")}return NO
},showSinglePane:function(){this.set("paneIsSplit",false);this.set("dataViewNowShowing","Smartgraphs.activityPage.singlePaneDataView")
},showSplitPane:function(){this.set("paneIsSplit",true);this.set("dataViewNowShowing","Smartgraphs.activityPage.splitPaneDataView")
},showImage:function(c,a){c=this.validPaneFor(c);var b=this.firstOrSecondFor(c);if(!b){return NO
}this.set(b+"ImageValue",a);this.set(c+"PaneNowShowing","Smartgraphs.activityPage."+b+"ImageView");
return YES},showGraph:function(c,a){c=this.validPaneFor(c);var b=this.firstOrSecondFor(c);
if(!b){return NO}Smartgraphs.get(b+"GraphController").openGraph(a);this.set(c+"PaneNowShowing","Smartgraphs.activityPage."+b+"GraphPane");
return YES},hidePane:function(a){a=this.validPaneFor(a);if(!a){return NO}this.set(a+"PaneNowShowing",null);
return YES},showSensorLoadingView:function(b){b=this.validPaneFor(b);var a=this.firstOrSecondFor(b);
if(!a){return NO}this.hideControls();this.set(a+"GraphPaneControls","Smartgraphs.activityPage.sensorLoadingView");
return YES},showControls:function(b){b=this.validPaneFor(b);var a=this.firstOrSecondFor(b);
if(!a){return NO}this.hideControls();this.disableAllControls();this.set(a+"GraphPaneControls","Smartgraphs.activityPage.graphControlsView");
return YES},hideControls:function(b){if(b){b=this.validPaneFor(b);var a=this.firstOrSecondFor(b);
if(!a){return NO}this.set(a+"GraphPaneControls",null)}else{this.set("firstGraphPaneControls",null);
this.set("secondGraphPaneControls",null)}return YES},revealAllControls:function(){this.set("startControlIsVisible",YES);
this.set("stopControlIsVisible",YES);this.set("clearControlIsVisible",YES)},revealOnlyClearControl:function(){this.set("startControlIsVisible",NO);
this.set("stopControlIsVisible",NO);this.set("clearControlIsVisible",YES)},disableAllControls:function(){this.set("startControlIsEnabled",NO);
this.set("startControlIsDefault",NO);this.set("stopControlIsEnabled",NO);this.set("stopControlIsDefault",NO);
this.set("clearControlIsEnabled",NO);this.set("clearControlIsDefault",NO)},highlightStartControl:function(){this.set("startControlIsEnabled",YES);
this.set("startControlIsDefault",YES);this.set("stopControlIsEnabled",NO);this.set("stopControlIsDefault",NO);
this.set("clearControlIsEnabled",NO);this.set("clearControlIsDefault",NO)},highlightStopControl:function(){this.set("startControlIsEnabled",NO);
this.set("startControlIsDefault",NO);this.set("stopControlIsEnabled",YES);this.set("stopControlIsDefault",YES);
this.set("clearControlIsEnabled",NO);this.set("clearControlIsDefault",NO)},highlightClearControl:function(){this.set("startControlIsEnabled",NO);
this.set("startControlIsDefault",NO);this.set("stopControlIsEnabled",NO);this.set("stopControlIsDefault",NO);
this.set("clearControlIsEnabled",YES);this.set("clearControlIsDefault",YES)},clear:function(){this.hideControls();
if(this.get("paneIsSplit")){this.hidePane("top");this.hidePane("bottom")}else{this.hidePane("single")
}}});Smartgraphs.appWindowController=SC.ObjectController.create({nowShowing:null,loadingMessage:null,showActivityView:function(){this.set("nowShowing","Smartgraphs.activityPage.activityView")
},showActivityLoadingView:function(){this.set("nowShowing","Smartgraphs.mainPage.loadingView");
this.set("loadingMessage",Smartgraphs.activityPage.getPath("activityView.loadingMessage"))
},showErrorLoadingActivityView:function(){this.set("nowShowing","Smartgraphs.activityPage.errorLoadingActivityView")
}});Smartgraphs.GraphController=SC.ObjectController.extend(SC.Responder,{seriesList:null,selectedSeries:null,annotationList:null,_routeEvents:NO,eventQueue:[],colors:["#1f77b4","#ff7f0e","#2ca02c","#d62728","#9467bd","#8c564b","#e377c2","#7f7f7f","#bcbd22","#17becf"],openGraph:function(b){if(this.get("id")===b){return
}var f=Smartgraphs.store.find(Smartgraphs.Graph,b);if(!f){f=Smartgraphs.store.createRecord(Smartgraphs.Graph,{id:b});
Smartgraphs.store.commitRecords()}this.set("content",f);this.set("seriesList",[]);
this.set("annotationList",[]);var c=this.get("initialSeries")||[];for(var d=0,e=c.get("length");
d<e;d++){this.addObjectByName(Smartgraphs.DataSeries,c.objectAt(d))}c=this.get("initialAnnotations")||[];
var a;for(d=0,e=c.get("length");d<e;d++){a=c.objectAt(d);this.addObjectByName(SC.objectForPropertyPath(a.type),a.name)
}},setAxes:function(a){var b=Smartgraphs.store.find(Smartgraphs.Axes,a);if(!b){b=Smartgraphs.store.createRecord(Smartgraphs.Axes,{guid:a})
}this.set("axes",b);Smartgraphs.store.commitRecords()},addSeries:function(a){if(this.findSeriesByName(a.get("name"))){return NO
}a.set("color",this.getColorForSeries(a));this.get("seriesList").pushObject(a);Smartgraphs.store.commitRecords();
return YES},getColorForSeries:function(d){var f=d.get("defaultColor");var e=this.get("seriesList").getEach("color");
if(f&&!e.contains(f)){return f}var b=this.get("colors");for(var c=0,a=b.get("length");
c<a;c++){if(!e.contains(b.objectAt(c))){return b.objectAt(c)}}return b.objectAt(0)
},addObjectByName:function(a,e){var d=SC.Query.local(a,"name={name} AND session={session}",{name:e,session:Smartgraphs.sessionController.getPath("content")});
var c=Smartgraphs.store.find(d);if(c.get("length")<1){d=SC.Query.local(a,"name={name} AND isExample=YES",{name:e});
c=Smartgraphs.store.find(d);if(c.get("length")<1){return NO}}var b=c.objectAt(0);
if(a===Smartgraphs.DataSeries){this.addSeries(b);return YES}if(b.get("isAnnotation")){this.addAnnotation(b)
}},removeSeries:function(a){var c=this.get("seriesList");var b=this.findSeriesByName(a);
if(b){c.removeObject(b)}},findSeriesByName:function(a){var d=this.get("seriesList");
var c;for(var b=0,e=d.get("length");b<e;b++){c=d.objectAt(b);if(c.get("name")===a){return c
}}},findAnnotationByName:function(d){var e=this.get("annotationList");var a;for(var b=0,c=e.get("length");
b<c;b++){a=e.objectAt(b);if(a.get("name")===d){return a}}return null},selectSeries:function(a){var b=this.findSeriesByName(a);
if(b){this.set("selectedSeries",b)}},removeAllSeries:function(){},addAnnotation:function(a){if(this.findAnnotationByName(a.get("name"))){return NO
}this.get("annotationList").pushObject(a);return YES},clear:function(){this.set("seriesList",[]);
this.set("annotationList",[]);this.set("content",null)},inputAreaMouseDown:function(a,b){if(this._routeEvents){this._eventQueue.pushObject({x:a,y:b,type:Smartgraphs.freehandInputController.START})
}},inputAreaMouseDragged:function(a,b){if(this._routeEvents){this._eventQueue.pushObject({x:a,y:b,type:Smartgraphs.freehandInputController.CONTINUE})
}},inputAreaMouseUp:function(a,b){if(this._routeEvents){this._eventQueue.pushObject({x:a,y:b,type:Smartgraphs.freehandInputController.END})
}},startFreehandInput:function(){this._routeEvents=YES;this._eventQueue=[];this.set("eventQueue",this._eventQueue)
},endFreehandInput:function(){this._routeEvents=NO}});sc_require("controllers/graph");
Smartgraphs.firstGraphController=Smartgraphs.GraphController.create({viewPath:"activityPage.firstGraphPane.graphView"});
Smartgraphs.freehandInputController=SC.ObjectController.create({_inputIsEnabled:NO,_isRecording:NO,_pane:null,pane:function(){return this._pane
}.property(),register:function(d,b,a){if(this._inputIsEnabled){return NO}d=Smartgraphs.activityViewController.validPaneFor(d);
var c=b?b.findAnnotationByName(a):NO;if(d&&c&&SC.kindOf(c,Smartgraphs.FreehandSketch)){this._graphController=b;
this._sketch=c;this._pane=d;return YES}return NO},enableInput:function(){if(!this._sketch){return NO
}this._inputIsEnabled=YES;this._graphController.startFreehandInput();this._graphController.get("eventQueue").addObserver("[]",this,this.graphObserver);
return YES},disableInput:function(){this.graphObserver();this._graphController.get("eventQueue").removeObserver("[]",this,this.graphObserver);
this._graphController.endFreehandInput();this._graphController=null;this._sketch=null;
this._inputIsEnabled=NO;this._pane=null;this._isRecording=NO},graphObserver:function(){var b,a=this._graphController.get("eventQueue");
while((b=a.shiftObject())){switch(b.type){case this.CONTINUE:this.continueAt(b.x,b.y);
break;case this.START:this.startAt(b.x,b.y);break;case this.END:this.endAt(b.x,b.y);
break}}},startAt:function(a,b){if(this._isRecording&&this._inputIsEnabled&&!this._sketch.getPath("points.length")){this._sketch.set("points",[{x:a,y:b}])
}},continueAt:function(a,b){if(this._isRecording&&this._inputIsEnabled){this._sketch.get("points").pushObject({x:a,y:b})
}},endAt:function(a,b){if(this._isRecording&&this._inputIsEnabled){this._sketch.get("points").pushObject({x:a,y:b});
Smartgraphs.sendAction("freehandSketchCompleted")}},startRecording:function(){this._isRecording=YES
},stopRecording:function(){this._isRecording=NO},clearSketch:function(){if(!this._isRecording&&this._inputIsEnabled){this._sketch.set("points",[])
}}});Smartgraphs.freehandInputController.START=1;Smartgraphs.freehandInputController.CONTINUE=2;
Smartgraphs.freehandInputController.END=3;Smartgraphs.responseTemplateController=SC.ObjectController.create({contentDidChange:function(){this.invokeOnce(this._initializeValues)
}.observes("content"),_initializeValues:function(){var a=this.get("initialValues");
if(a){this.set("values",a.copy())}},editingShouldBeEnabled:NO});sc_require("controllers/graph");
Smartgraphs.secondGraphController=Smartgraphs.GraphController.create({viewPath:"activityPage.secondGraphPane.graphView"});
Smartgraphs.sensorController=SC.ObjectController.create({xMin:null,xMax:null,downsampleRatio:function(){return $.browser.msie?3:2
}(),dt:0.1,sensorIsReady:NO,_appletView:null,_inputIsEnabled:NO,_isRecording:NO,_pane:null,_series:null,pane:function(){return this._pane
}.property(),register:function(d,b,a,c){if(this._inputIsEnabled){return NO}d=Smartgraphs.activityViewController.validPaneFor(d);
if(d&&b&&b.get("isExample")===NO){this._pane=d;this._series=b;if(a){this.set("xMin",a)
}if(c){this.set("xMax",c)}return YES}return NO},enableInput:function(){if(this._inputIsEnabled||!this._pane||!this._series){return NO
}this._inputIsEnabled=YES;if(!this._appletView){this._appletView=Smartgraphs.appletPage.sensorAppletView.create();
Smartgraphs.mainPage.get("mainPane").appendChild(this._appletView)}if(this.get("sensorIsReady")){Smartgraphs.sendAction("sensorHasLoaded")
}else{Smartgraphs.sendAction("waitForSensorToLoad")}return YES},disableInput:function(){this._inputIsEnabled=NO;
this._isRecording=NO;this._series=null;this._pane=null},startRecording:function(){this._isRecording=YES;
this._nsamples=0;this._appletView.start()},stopRecording:function(){this._isRecording=NO;
this._appletView.stop()},clearRecordedData:function(){SC.RunLoop.begin();this._series.get("points").invoke("destroy");
SC.RunLoop.end()},sensorsReady:function(){SC.RunLoop.begin();this.set("sensorIsReady",YES);
if(this._inputIsEnabled){Smartgraphs.sendAction("sensorHasLoaded")}SC.RunLoop.end()
},dataReceived:function(e,g,c){if(!(this._inputIsEnabled&&this._isRecording)){return
}var a=this.get("dt");var d=this.get("downsampleRatio");var h,f;var j;for(var b=0;
b<g;b++){h=this._nsamples*a;f=c[b];if(h>this.get("xMax")){Smartgraphs.sendAction("stopSensor");
return}if(this._nsamples%d===0){SC.RunLoop.begin();j=Smartgraphs.store.createRecord(Smartgraphs.DataPoint,{x:h,y:f,guid:Smartgraphs.getNextGuid()});
this._series.get("points").pushObject(j);Smartgraphs.store.commitRecords();SC.RunLoop.end()
}this._nsamples++}},dataStreamEvent:function(){}});Smartgraphs.sessionController=SC.ObjectController.create({newSession:function(){var a=Smartgraphs.store.createRecord(Smartgraphs.Session,{steps:[]});
a.set("user",Smartgraphs.userController.get("content"));a.set("id",Smartgraphs.getNextGuid());
this.set("content",a);Smartgraphs.store.commitRecords()},createSeries:function(a){var b=Smartgraphs.store.createRecord(Smartgraphs.DataSeries,{isExample:NO,name:a,points:[]});
b.set("session",this.get("content"));b.set("id",Smartgraphs.getNextGuid());Smartgraphs.store.commitRecords();
return b},createAnnotation:function(a,c){var b=Smartgraphs.store.createRecord(c,{isExample:NO,name:a});
b.set("session",this.get("content"));b.set("id",Smartgraphs.getNextGuid());return b
},copyExampleSeries:function(m,c){var h=SC.Query.local(Smartgraphs.DataSeries,"isExample=YES AND name={seriesName}",{seriesName:m});
var f=Smartgraphs.store.find(h);if(f.get("length")<1){return NO}var j=f.objectAt(0);
h=SC.Query.local(Smartgraphs.DataSeries,"isExample=NO AND session={session} AND name={seriesName}",{session:this.get("content"),name:c});
var g=Smartgraphs.store.find(h);if(g.get("length")<1){return NO}var a=g.objectAt(0);
var d=j.get("points");var k,b;for(var e=0,l=d.get("length");e<l;e++){k=d[e];b=Smartgraphs.store.createRecord(Smartgraphs.DataPoint,{x:k.get("x"),y:k.get("y")});
b.set("id",Smartgraphs.getNextGuid());b.set("series",a)}Smartgraphs.store.commitRecords();
return YES}});Smartgraphs.userController=SC.ObjectController.create({});Smartgraphs.mockResponses={};
sc_require("data_sources/mock_responses/mock_responses");Smartgraphs.mockResponses["/backend/activity/1"]={title:"Away and Toward",url:"/backend/activity/1",pages:["/backend/activity/1/page/1","/backend/activity/1/page/2","/backend/activity/1/page/3","/backend/activity/1/page/4","/backend/activity/1/page/5","/backend/activity/1/page/6","/backend/activity/1/page/7","/backend/activity/1/page/8","/backend/activity/1/page/9","/backend/activity/1/page/10","/backend/activity/1/page/11"],pageListUrl:"/backend/activity/1/pages"};
Smartgraphs.mockResponses["/backend/activity/2"]={title:"Second Activity",url:"/backend/activity/2",pages:["/backend/activity/2/page/1"],pageListUrl:"/backend/activity/2/pages"};
Smartgraphs.mockResponses["/backend/activity/new-step"]={title:"Activity Demonstrating New ActivityStep Structure",url:"/backend/activity/new-step",pages:["/backend/activity/new-step/page/1"],pageListUrl:"/backend/activity/new-step/pages"};
sc_require("data_sources/mock_responses/mock_responses");var page,pages=[];page=Smartgraphs.mockResponses["/backend/activity/1/page/1"]={steps:["/backend/activity/1/page/1/step/1"],name:"Introductory Page",firstStep:"/backend/activity/1/page/1/step/1",introText:"<h1>How can you tell a story about motion without using words?</h1>\n\n<p>The picture at right communicates direction of traffic using recognizable symbols. In this activity, you will explore how motions in two opposite directions appear on a position-time graph. By doing so, you will learn conventional methods of motion storytelling and analysis.</p>",url:"/backend/activity/1/page/1",activity:"/backend/activity/1",index:1,stepListUrl:"/backend/activity/1/page/1/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/2"]={steps:["/backend/activity/1/page/2/step/1","/backend/activity/1/page/2/step/2"],name:"Prediction Page",firstStep:"/backend/activity/1/page/2/step/1",introText:"<p>Let\u2019s start by demonstrating what you already know about representing motion on a graph. Imagine a straight walking path that is 4 meters long.</p><p>Point A is at the 0-meter mark.</p><p>Point B is at the 4-meter mark.</p>",url:"/backend/activity/1/page/2",activity:"/backend/activity/1",index:2,stepListUrl:"/backend/activity/1/page/2/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/3"]={steps:["/backend/activity/1/page/3/step/1","/backend/activity/1/page/3/step/2"],name:"Motion Sensor Page",firstStep:"/backend/activity/1/page/3/step/1",introText:"<p>Let\u2019s practice collecting data with the motion sensor so you can see whether your sketches were accurate. You will walk on a 4-meter walking path like the one described earlier.</p>",url:"/backend/activity/1/page/3",activity:"/backend/activity/1",index:3,stepListUrl:"/backend/activity/1/page/3/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/4"]={steps:["/backend/activity/1/page/4/step/1","/backend/activity/1/page/4/step/2","/backend/activity/1/page/4/step/3"],name:"Replay Page",firstStep:"/backend/activity/1/page/4/step/1",introText:"<p>To the right are your predictions for walking away and toward point B.</p><p>Now that you &quot;have the hang of it,&quot; you will walk with the sensor to see if your sketches of forward and backward motion are correct.</p>",url:"/backend/activity/1/page/4",activity:"/backend/activity/1",index:4,stepListUrl:"/backend/activity/1/page/4/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/5"]={steps:["/backend/activity/1/page/5/step/1","/backend/activity/1/page/5/step/2"],name:"Replay Page",firstStep:"/backend/activity/1/page/5/step/1",introText:"<p>At right is the data you just collected with the motion sensor.</p>",url:"/backend/activity/1/page/5",activity:"/backend/activity/1",index:5,stepListUrl:"/backend/activity/1/page/5/steps"};
pages.push(page);Smartgraphs.mockResponses["/backend/activity/1/pages"]=pages;page=Smartgraphs.mockResponses["/backend/activity/1/page/6"]={steps:["/backend/activity/1/page/6/step/1","/backend/activity/1/page/6/step/2","/backend/activity/1/page/6/step/3","/backend/activity/1/page/6/step/4","/backend/activity/1/page/6/step/5"],name:"Replay Page",firstStep:"/backend/activity/1/page/6/step/1",introText:"<p>At right is a position-time graph created by someone walking in front of a motion sensor.</p>",url:"/backend/activity/1/page/6",activity:"/backend/activity/1",index:6,stepListUrl:"/backend/activity/1/page/6/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/7"]={steps:["/backend/activity/1/page/7/step/1","/backend/activity/1/page/7/step/2","/backend/activity/1/page/7/step/3","/backend/activity/1/page/7/step/4"],name:"Replay Page",firstStep:"/backend/activity/1/page/7/step/1",introText:"<p>Now you will collect and analyze your own data once again.</p>",url:"/backend/activity/1/page/7",activity:"/backend/activity/1",index:7,stepListUrl:"/backend/activity/1/page/7/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/8"]={steps:["/backend/activity/1/page/8/step/1","/backend/activity/1/page/8/step/2","/backend/activity/1/page/8/step/3","/backend/activity/1/page/8/step/4","/backend/activity/1/page/8/step/5","/backend/activity/1/page/8/step/6"],name:"Replay Page",firstStep:"/backend/activity/1/page/8/step/1",introText:"<p>To the right, two different data sets are plotted on the same graph.</p>",url:"/backend/activity/1/page/8",activity:"/backend/activity/1",index:8,stepListUrl:"/backend/activity/1/page/8/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/9"]={steps:["/backend/activity/1/page/9/step/1","/backend/activity/1/page/9/step/2"],name:"Replay Page",firstStep:"/backend/activity/1/page/9/step/1",introText:"<p>Look at the position-time graph to the right. You are going to recreate this graph as closely as possible by walking in front of the motion sensor to collect position and time data.</p>",url:"/backend/activity/1/page/9",activity:"/backend/activity/1",index:9,stepListUrl:"/backend/activity/1/page/9/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/10"]={steps:["/backend/activity/1/page/10/step/1","/backend/activity/1/page/10/step/2"],name:"Replay Page",firstStep:"/backend/activity/1/page/10/step/1",introText:"<p>To the right are the sketches you drew at the beginning of this activity.</p>",url:"/backend/activity/1/page/10",activity:"/backend/activity/1",index:10,stepListUrl:"/backend/activity/1/page/10/steps"};
pages.push(page);page=Smartgraphs.mockResponses["/backend/activity/1/page/11"]={steps:["/backend/activity/1/page/11/step/1"],name:"Replay Page",firstStep:"/backend/activity/1/page/11/step/1",introText:"<p>Congratulations! You have finished the activity.</p>",url:"/backend/activity/1/page/11",activity:"/backend/activity/1",index:10,stepListUrl:"/backend/activity/1/page/11/steps"};
pages.push(page);Smartgraphs.mockResponses["/backend/activity/1/pages"]=pages;pages=[];
page=Smartgraphs.mockResponses["/backend/activity/2/page/1"]={steps:["/backend/activity/2/page/1/step/1","/backend/activity/2/page/1/step/2"],name:"First Page of Second Activity",firstStep:"/backend/activity/2/page/1/step/1",introText:"<h1>A Second Activity</h1>",url:"/backend/activity/2/page/1",activity:"/backend/activity/2",index:1,stepListUrl:"/backend/activity/2/page/1/steps"};
pages.push(page);Smartgraphs.mockResponses["/backend/activity/2/pages"]=pages;pages=[];
page=Smartgraphs.mockResponses["/backend/activity/new-step/page/1"]={steps:["/backend/activity/new-step/page/1/step/1","/backend/activity/new-step/page/1/step/2","/backend/activity/new-step/page/1/step/3"],name:"Only Page",firstStep:"/backend/activity/new-step/page/1/step/1",introText:"<h1>Watch the system respond!</h1>",url:"/backend/activity/new-step/page/1",activity:"/backend/activity/new-step",index:1,stepListUrl:"/backend/activity/new-step/page/1/steps"};
pages.push(page);Smartgraphs.mockResponses["/backend/activity/new-step/pages"]=pages;
sc_require("data_sources/mock_responses/mock_responses");var step,steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/1/step/1"]={url:"/backend/activity/1/page/1/step/1",activityPage:"/backend/activity/1/page/1",initialPaneConfig:"single",singleGraph:null,topGraph:null,bottomGraph:null,singleImage:"/static/smartgraphs/es/7e639bc282b33bfb863a8c7d2319650bef43bf05/resources/arrow.jpg",topImage:null,bottomImage:null,beforeText:"",responseTemplate:null,afterText:"",startCommands:[],shouldFinishImmediately:true,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:true,submitButtonTitle:"",nextButtonShouldSubmit:false};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/1/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/2/step/1"]={url:"/backend/activity/1/page/2/step/1",activityPage:"/backend/activity/1/page/2",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/1/prediction-away",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>In the top-right area, draw a graph of someone walking at a <b>slow</b>, <b>steady pace</b> from point A to point B between 0 and 15 seconds.</p>",responseTemplate:null,afterText:"",startCommands:[{action:"startFreehandInput",literalArgs:{pane:"top",annotationName:"prediction-away"}}],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.SketchLengthInspector",config:{annotationName:"prediction-away",check:"continuously"}},submissibilityCriterion:{gt:["value",-1]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/2/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/2/step/2"]={url:"/backend/activity/1/page/2/step/2",activityPage:"/backend/activity/1/page/2",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/1/prediction-away",bottomGraph:"/backend/activity/1/graph/2/prediction-toward",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>In the bottom-right area, draw a graph of someone walking at a <b>slow</b>, <b>steady pace</b> from point B to point A between 0 and 15 seconds. Click Next when you are done.</p>",responseTemplate:null,afterText:"",startCommands:[{action:"startFreehandInput",literalArgs:{pane:"bottom",annotationName:"prediction-toward"}}],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.SketchLengthInspector",config:{annotationName:"prediction-toward",check:"continuously"}},submissibilityCriterion:{gt:["value",-1]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/2/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/3/step/1"]={url:"/backend/activity/1/page/3/step/1",activityPage:"/backend/activity/1/page/3",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/3/sensor-playing",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p><b>Place</b> the sensor at the 0-meter mark.</p><p><b>Stand</b> near the sensor. When you are ready, have your partner <b>click Start</b> to record the position and time data for your movements.</p><p><b>Walk</b> on the path for 15 seconds. <b>Try</b> different kinds of motions (walking fast, slow, forward, backward\u2026)</p><p><b>Click Reset</b> if you want to try again.</p>",responseTemplate:null,afterText:"",startCommands:[{action:"startSensorInput",literalArgs:{pane:"top",seriesName:"sensor-play"}}],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/3/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/3/step/2"]={url:"/backend/activity/1/page/3/step/2",activityPage:"/backend/activity/1/page/3",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/3/sensor-playing",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>How are different motions represented on a position-time graph? (For example, what does the graph look like when you are standing still, walking forward ...?)</p><p>Try to use some of the following words: slope, flat, upward, downward, curved, straight, steep, gradual, line, curve.",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/3/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/4/step/1"]={url:"/backend/activity/1/page/4/step/1",activityPage:"/backend/activity/1/page/4",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/4/graph-with-away-prediction",bottomGraph:"/backend/activity/1/graph/5/graph-with-toward-prediction",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>First, <b>stand</b> close to the sensor, near the 0-meter mark.</p><p>When you are ready, have your partner <b>click Start</b> to record the position and time data for your movements.</p><p><b>Walk</b> on the path at a slow, steady pace, away from the sensor, for 15 seconds.</p>",responseTemplate:"",afterText:"",startCommands:[{action:"startSensorInput",literalArgs:{pane:"top",seriesName:"sensor-away"}}],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/4/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/4/step/2"]={url:"/backend/activity/1/page/4/step/2",activityPage:"/backend/activity/1/page/4",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/4/graph-with-away-prediction",bottomGraph:"/backend/activity/1/graph/5/graph-with-toward-prediction",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>To make the second graph, <b>stand</b> approximately 4 meters away from the sensor on the path.</p><p>When you are ready, have your partner <b>click Start</b> to record the position and time data for your movements.</p><p><b>Walk</b> on the path at the same slow, steady pace, toward the sensor, for 15 seconds.</p>",responseTemplate:"",afterText:"",startCommands:[{action:"startSensorInput",literalArgs:{pane:"bottom",seriesName:"sensor-toward"}}],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/4/step/3",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/4/step/3"]={url:"/backend/activity/1/page/4/step/3",activityPage:"/backend/activity/1/page/4",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/4/graph-with-away-prediction",bottomGraph:"/backend/activity/1/graph/5/graph-with-toward-prediction",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>How closely do the graphs of your data match your original predictions?</p>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/4/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/5/step/1"]={url:"/backend/activity/1/page/5/step/1",activityPage:"/backend/activity/1/page/5",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/6/sensor-away",bottomGraph:"/backend/activity/1/graph/7/sensor-toward",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>How are the two position-time graphs <b>similar</b> to each other?</p>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/5/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/5/step/2"]={url:"/backend/activity/1/page/5/step/2",activityPage:"/backend/activity/1/page/5",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/6/sensor-away",bottomGraph:"/backend/activity/1/graph/7/sensor-toward",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>How does motion away from the sensor <b>differ</b> from motion toward the sensor on a position-time graph?</b>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/5/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/6/step/1"]={url:"/backend/activity/1/page/6/step/1",activityPage:"/backend/activity/1/page/6",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/8/walking-example-1",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>What happened at the red point (the y-intercept for this motion)?</p>",responseTemplate:"/backend/response-template/3/walking-example-1",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":["value",[1,2,3,4]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},responseBranches:[{criterion:{equals:["value",1]},step:"/backend/activity/1/page/6/step/5"},{criterion:{equals:["value",2]},step:"/backend/activity/1/page/6/step/2"},{criterion:{equals:["value",3]},step:"/backend/activity/1/page/6/step/3"},{criterion:{equals:["value",4]},step:"/backend/activity/1/page/6/step/4"}],defaultBranch:"/backend/activity/1/page/6/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/6/step/2"]={url:"/backend/activity/1/page/6/step/2",activityPage:"/backend/activity/1/page/6",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/8/walking-example-1",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>What happened at the red point (the y-intercept for this motion)?</p>",responseTemplate:"/backend/response-template/3/walking-example-1",afterText:"<p><b>Incorrect.</b> Look at the walker's position at the red point, and select another answer.</p>",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":["value",[1,2,3,4]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},responseBranches:[{criterion:{equals:["value",1]},step:"/backend/activity/1/page/6/step/5"},{criterion:{equals:["value",2]},step:"/backend/activity/1/page/6/step/2"},{criterion:{equals:["value",3]},step:"/backend/activity/1/page/6/step/3"},{criterion:{equals:["value",4]},step:"/backend/activity/1/page/6/step/4"}],defaultBranch:"/backend/activity/1/page/6/step/3",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/6/step/3"]={url:"/backend/activity/1/page/6/step/3",activityPage:"/backend/activity/1/page/6",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/8/walking-example-1",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>What happened at the red point (the y-intercept for this motion)?</p>",responseTemplate:"/backend/response-template/3/walking-example-1",afterText:"<p><b>Incorrect.</b> Think about what happened to the walker's position after this point, and select another answer.</p>",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":["value",[1,2,3,4]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},responseBranches:[{criterion:{equals:["value",1]},step:"/backend/activity/1/page/6/step/5"},{criterion:{equals:["value",2]},step:"/backend/activity/1/page/6/step/2"},{criterion:{equals:["value",3]},step:"/backend/activity/1/page/6/step/3"},{criterion:{equals:["value",4]},step:"/backend/activity/1/page/6/step/4"}],defaultBranch:"/backend/activity/1/page/6/step/4",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/6/step/4"]={url:"/backend/activity/1/page/6/step/4",activityPage:"/backend/activity/1/page/6",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/8/walking-example-1",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>What happened at the red point (the y-intercept for this motion)?</p>",responseTemplate:"/backend/response-template/3/walking-example-1",afterText:"<p><b>Incorrect.</b> Look at the walker's direction after the red point, and select another answer.</p>",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":["value",[1,2,3,4]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},responseBranches:[{criterion:{equals:["value",1]},step:"/backend/activity/1/page/6/step/5"},{criterion:{equals:["value",2]},step:"/backend/activity/1/page/6/step/2"},{criterion:{equals:["value",3]},step:"/backend/activity/1/page/6/step/3"},{criterion:{equals:["value",4]},step:"/backend/activity/1/page/6/step/4"}],defaultBranch:"/backend/activity/1/page/6/step/5",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/6/step/5"]={url:"/backend/activity/1/page/6/step/5",activityPage:"/backend/activity/1/page/6",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/8/walking-example-1",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p><b>Correct!</b> At this point, the walker was 4 meters away, getting ready to walk toward the sensor.</p>",responseTemplate:null,afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:{},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"",isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/6/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/7/step/1"]={url:"/backend/activity/1/page/7/step/1",activityPage:"/backend/activity/1/page/7",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/3/sensor-playing",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p><b>Stand</b> at a starting point <i><b>other</b></i> than the 0-meter mark.</p><p>When you are ready, have your partner <b>click Start</b> to record the position and time data for your movements.</p><p><b>Walk</b> on the path for 15 seconds, experimenting with different directions and speeds.</p>",responseTemplate:null,afterText:"",startCommands:[{action:"startSensorInput",literalArgs:{pane:"top",seriesName:"sensor-play-2"}}],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/7/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/7/step/2"]={url:"/backend/activity/1/page/7/step/2",activityPage:"/backend/activity/1/page/7",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/3/sensor-playing",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>What is the significance of the y-intercept (the y-value of the point where the graph crosses the y-axis) of the position-time graph?</p>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/7/step/3",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/7/step/3"]={url:"/backend/activity/1/page/7/step/3",activityPage:"/backend/activity/1/page/7",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/3/sensor-playing",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Explain how the graph conveys how fast you walked.</p>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/7/step/4",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/7/step/4"]={url:"/backend/activity/1/page/7/step/4",activityPage:"/backend/activity/1/page/7",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/3/sensor-playing",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>How is direction represented on the graph?</p>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/7/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/8/step/1"]={url:"/backend/activity/1/page/8/step/1",activityPage:"/backend/activity/1/page/8",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/9/two-walkers",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Which of the following motion scenarios could have resulted in this graph?</p>",responseTemplate:"/backend/response-template/4/two-walkers",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":["value",[1,2,3,4]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},responseBranches:[{criterion:{equals:["value",2]},step:"/backend/activity/1/page/8/step/6"}],defaultBranch:"/backend/activity/1/page/8/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/8/step/2"]={url:"/backend/activity/1/page/8/step/2",activityPage:"/backend/activity/1/page/8",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/9/two-walkers",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Which of the following motion scenarios could have resulted in this graph?</p>",responseTemplate:"/backend/response-template/4/two-walkers",afterText:"<p><b>Incorrect.</b> Two data sets are represented on one graph. Analyze each set of data, and select another answer.</p>",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":["value",[1,2,3,4]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},responseBranches:[{criterion:{equals:["value",2]},step:"/backend/activity/1/page/8/step/6"}],defaultBranch:"/backend/activity/1/page/8/step/3",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/8/step/3"]={url:"/backend/activity/1/page/8/step/3",activityPage:"/backend/activity/1/page/8",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/9/two-walkers",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Which of the following motion scenarios could have resulted in this graph?</p>",responseTemplate:"/backend/response-template/4/two-walkers",afterText:"<p><b>Incorrect.</b> Figure out where each person started and ended, and select another answer.</p>",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":["value",[1,2,3,4]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},responseBranches:[{criterion:{equals:["value",2]},step:"/backend/activity/1/page/8/step/6"}],defaultBranch:"/backend/activity/1/page/8/step/4",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/8/step/4"]={url:"/backend/activity/1/page/8/step/4",activityPage:"/backend/activity/1/page/8",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/9/two-walkers",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Which of the following motion scenarios could have resulted in this graph?</p>",responseTemplate:"/backend/response-template/4/two-walkers",afterText:"<p><b>Incorrect.</b> Think about the direction each walker moved from the starting point, and select another answer.</p>",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":["value",[1,2,3,4]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},responseBranches:[{criterion:{equals:["value",2]},step:"/backend/activity/1/page/8/step/6"}],defaultBranch:"/backend/activity/1/page/8/step/5",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/8/step/5"]={url:"/backend/activity/1/page/8/step/5",activityPage:"/backend/activity/1/page/8",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/9/two-walkers",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p><b>Still incorrect.</b> Both walkers started 2 meters away. Then, one walked toward the sensor for 20 seconds, while the other walked away from the sensor during the same 20 seconds.</p>",responseTemplate:null,afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:null,submissibilityCriterion:{},triggeredCommands:[],responseInspector:{},responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:true};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/8/step/6"]={url:"/backend/activity/1/page/8/step/6",activityPage:"/backend/activity/1/page/8",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/9/two-walkers",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p><b>Correct!</b> Both walkers started 2 meters away. Then, one walked toward the sensor for 20 seconds, while the other walked away from the sensor during the same 20 seconds.</p>",responseTemplate:null,afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:null,submissibilityCriterion:{},triggeredCommands:[],responseInspector:{},responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/8/steps"]=steps;
steps=[];steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/9/step/1"]={url:"/backend/activity/1/page/9/step/1",activityPage:"/backend/activity/1/page/9",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/10/graph-to-match",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p><b>Move</b> to your starting point and, when you are ready, have your partner <b>click Start</b> to record the data for your movements. <p><b>Walk</b> on the path for 15 seconds while trying to match the given graph.</p>",responseTemplate:null,afterText:"",startCommands:[{action:"startSensorInput",literalArgs:{pane:"top",seriesName:"sensor-match"}}],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/9/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/9/step/2"]={url:"/backend/activity/1/page/9/step/2",activityPage:"/backend/activity/1/page/9",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/10/graph-to-match",bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>How closely does your graph match the given graph? What could you have done to match the given graph more closely?</p><p>Try to use some of the following words: fast, slow, toward, away.</p>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/9/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/10/step/1"]={url:"/backend/activity/1/page/10/step/1",activityPage:"/backend/activity/1/page/10",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/4/graph-with-away-prediction",bottomGraph:"/backend/activity/1/graph/5/graph-with-toward-prediction",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Write down <b>3</b> things you have learned about motion since you started this activity.</p>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/1/page/10/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/1/page/10/step/2"]={url:"/backend/activity/1/page/10/step/2",activityPage:"/backend/activity/1/page/10",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/4/graph-with-away-prediction",bottomGraph:"/backend/activity/1/graph/5/graph-with-toward-prediction",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Describe <b>1</b> type of motion you would like to try with the motion sensor.</p>",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{gt:[{length:{strip:"value"}},0]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/10/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/1/page/11/step/1"]={url:"/backend/activity/1/page/11/step/1",activityPage:"/backend/activity/1/page/11",initialPaneConfig:"single",singleGraph:null,topGraph:null,bottomGraph:null,singleImage:"/static/smartgraphs/es/7e639bc282b33bfb863a8c7d2319650bef43bf05/resources/arrow.jpg",topImage:null,bottomImage:null,beforeText:"",responseTemplate:null,afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:true,submitButtonTitle:"",nextButtonShouldSubmit:false};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/1/page/11/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/2/page/1/step/1"]={url:"/backend/activity/2/page/1/step/1",activityPage:"/backend/activity/2/page/1",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/1/prediction-away",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Try visiting the first activity by changing just the last digit of the URL from '2' to '1' and hitting Enter.<p><p>Also, you can now resize the browser window without scrambling the prediction graph on the right.</p>",responseTemplate:"",afterText:"",startCommands:[{action:"startFreehandInput",literalArgs:{pane:"single",annotationName:"prediction-away"}}],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.SketchLengthInspector",config:{annotationName:"prediction-away",check:"continuously"}},submissibilityCriterion:{gt:["value",5]},triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:"/backend/activity/2/page/1/step/2",isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"OK",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/2/page/1/step/2"]={url:"/backend/activity/2/page/1/step/2",activityPage:"/backend/activity/2/page/1",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/1/prediction-away",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Congratulations!</p>",responseTemplate:"",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"",nextButtonShouldSubmit:true};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/2/page/1/steps"]=steps;
steps=[];step=Smartgraphs.mockResponses["/backend/activity/new-step/page/1/step/1"]={url:"/backend/activity/new-step/page/1/step/1",activityPage:"/backend/activity/new-step/page/1",initialPaneConfig:"single",singleGraph:null,topGraph:null,bottomGraph:null,singleImage:"/static/smartgraphs/es/7e639bc282b33bfb863a8c7d2319650bef43bf05/resources/arrow.jpg",topImage:null,bottomImage:null,beforeText:"<p>How many panes would you like to see on the next page? Enter 'one' or 'two': ",responseTemplate:"/backend/response-template/2/open",afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:true,submissibilityInspector:{type:"Smartgraphs.FirstResponseFieldInspector"},submissibilityCriterion:{"in":[{strip:"value"},["one","two"]]},triggeredCommands:[],responseInspector:{type:"Smartgraphs.ResponseFieldsInspector",config:{fieldIndex:0}},responseBranches:[{criterion:{equals:[{strip:"value"},"one"]},step:"/backend/activity/new-step/page/1/step/2"},{criterion:{equals:[{strip:"value"},"two"]},step:"/backend/activity/new-step/page/1/step/3"}],defaultBranch:null,isFinalStep:false,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"Show me!",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/new-step/page/1/step/2"]={url:"/backend/activity/new-step/page/1/step/2",activityPage:"/backend/activity/new-step/page/1",initialPaneConfig:"single",singleGraph:"/backend/activity/1/graph/1/prediction-away",topGraph:null,bottomGraph:null,singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Enjoy the single pane on the right!<p>",responseTemplate:null,afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"I saw it!",nextButtonShouldSubmit:false};
steps.push(step);step=Smartgraphs.mockResponses["/backend/activity/new-step/page/1/step/3"]={url:"/backend/activity/new-step/page/1/step/3",activityPage:"/backend/activity/new-step/page/1",initialPaneConfig:"split",singleGraph:null,topGraph:"/backend/activity/1/graph/1/prediction-away",bottomGraph:"/backend/activity/1/graph/2/prediction-toward",singleImage:null,topImage:null,bottomImage:null,beforeText:"<p>Enjoy the split pane on the right!<p>",responseTemplate:null,afterText:"",startCommands:[],shouldFinishImmediately:false,shouldWaitForSubmissibleResponse:false,submissibilityInspector:null,submissibilityCriterion:null,triggeredCommands:[],responseInspector:null,responseBranches:[],defaultBranch:null,isFinalStep:true,shouldAutoAdvancePage:false,hideSubmitButton:false,submitButtonTitle:"I saw it!",nextButtonShouldSubmit:false};
steps.push(step);Smartgraphs.mockResponses["/backend/activity/new-step/page/1/steps"]=steps;
Smartgraphs.RestDataSource=SC.DataSource.extend({latency:10,fetch:function(a,f){var g,b,e,c;
this.log("RestDataSource.fetch()");if(f.get("isPagesQuery")){g=f.get("parameters").activity;
b=g.get("pageListUrl");var d=g.get("id");this.log("  Query: pagesQuery for Activity %s",d);
this.log("  URL endpoint for query: %s",b);if(b===null){b=d+"/pages";this.log("  Mock URL endpoint for query: %s",b);
this.invokeLater(this._mockRequestListFromServer,this.get("latency"),a,f,b)}else{this.requestListFromServer(a,f,b)
}this.log("  returning YES from fetch");return YES}else{if(f===Smartgraphs.ALL_COMMANDS_QUERY){this.log("  Query: ALL_COMMANDS_QUERY");
b=Smartgraphs.activityController.get("commandListUrl");this.log("  URL endpoint for query: %s",b);
if(b===null){b="/backend/commands";this.log("  Mock URL endpoint for query: %s",b);
this.invokeLater(this._mockRequestListFromServer,this.get("latency"),a,f,b)}else{this.requestListFromServer(a,f,b)
}return YES}else{if(f===Smartgraphs.ALL_TRIGGERS_QUERY){this.log("  Query: ALL_TRIGGERS_QUERY");
b=Smartgraphs.activityController.get("triggerListUrl");this.log("  URL endpoint for query: %s",b);
if(b===null){b="/backend/triggers";this.log("  Mock URL endpoint for query: %s",b);
this.invokeLater(this._mockRequestListFromServer,this.get("latency"),a,f,b)}else{this.requestListFromServer(a,f,b)
}return YES}else{if(f.get("isStepsQuery")){e=f.get("parameters").page;var h=e.get("id");
this.log("  Query: stepsQuery for ActivityPage %s",h);b=e.get("stepListUrl");this.log("  URL endpoint for query: %s",b);
if(b===null){b=h+"/steps";this.log("  Mock URL endpoint for query: %s",b);this.invokeLater(this._mockRequestListFromServer,this.get("latency"),a,f,b)
}else{this.requestListFromServer(a,f,b)}return YES}else{if(f.get("isTriggerResponsesQuery")){c=f.get("parameters").step;
this.log("  Query: triggerResponsesQuery for ActivityStep %s",c.get("id"));b=c.get("triggerResponseListUrl");
this.log("  URL endpoint for query: %s",b);if(this.get("isTriggerResponsesOnBackend")){this.requestListFromServer(a,f,b)
}else{this.log("  Mock URL endpoint for query: %s",b);this.invokeLater(this._mockRequestListFromServer,this.get("latency"),a,f,b)
}return YES}else{if(f.get("isCommandInvocationsQuery")){c=f.get("activityStep");this.log("  Query: commandInvocationsQuery for ActivityStep %s",c.get("id"));
b=c.get("commandListUrl");this.log("  URL endpoint for query: %s",b);if(this.get("isCommandInvocationsOnBackend")){this.requestListFromServer(a,f,b)
}else{this.log("  Mock URL endpoint for query: %s",b);this.invokeLater(this._mockRequestListFromServer,this.get("latency"),a,f,b)
}return YES}}}}}}return NO},retrieveRecords:function(a,c,b){this.log("RestDataSource.retrieveRecords(storeKeys=%s)",c.toString());
arguments.callee.base.apply(this,arguments)},retrieveRecord:function(a,b){var c=Smartgraphs.store.recordTypeFor(b);
this.log("RestDataSource.retrieveRecord()");this.log("  Record type requested = %s",c.toString());
this.log("  id requested = %s",Smartgraphs.store.idFor(b));if((c===Smartgraphs.Activity)||c===Smartgraphs.ActivityPage){this.requestRecordFromServer(a,b);
this.log("  returning YES from retrieveRecord");return YES}return NO},createRecord:function(a,b){this.log("RestDataSource.createRecord()");
return NO},updateRecord:function(a,b){this.log("RestDataSource.updateRecord()");return NO
},destroyRecord:function(a,b){this.log("RestDataSource.destroyRecord()");return NO
},requestRecordFromServer:function(a,c){var b=a.idFor(c);if(Smartgraphs.get("useMockResponses")){this.invokeLater(this._mockRequestRecordFromServer,this.get("latency"),a,c)
}else{SC.Request.getUrl(b).notify(this,this.didRetrieveRecordFromServer,{store:a,storeKey:c}).header("Accept","application/json").json().send()
}},_mockRequestRecordFromServer:function(b,d){var c=b.idFor(d);var a=Smartgraphs.mockResponses.hasOwnProperty(c)?SC.Object.create({body:Smartgraphs.mockResponses[c]}):SC.Error.create();
this.didRetrieveRecordFromServer(a,{store:b,storeKey:d})},didRetrieveRecordFromServer:function(b,d){var a=d.store;
var c=d.storeKey;var e=Smartgraphs.store.recordTypeFor(c);this.log("RestDataSource.didRetrieveRecordFromServer()");
this.log("  Record type requested = %s",e.toString());this.log("  id requested = %s",Smartgraphs.store.idFor(c));
if(SC.ok(b)){this.log("  ...SUCCESS");a.dataSourceDidComplete(c,this.camelizeKeys(b.get("body")))
}else{this.log("  ...FAILURE");a.dataSourceDidError(c)}},requestListFromServer:function(a,c,b){if(Smartgraphs.get("useMockResponses")){this.invokeLater(this._mockRequestListFromServer,this.get("latency"),a,c,b)
}else{SC.Request.getUrl(b).notify(this,this.didRetrieveListFromServer,{store:a,query:c}).header("Accept","application/json").json().send()
}},_mockRequestListFromServer:function(b,d,c){var a=Smartgraphs.mockResponses.hasOwnProperty(c)?SC.Object.create({body:Smartgraphs.mockResponses[c]}):SC.Error.create();
this.didRetrieveListFromServer(a,{store:b,query:d})},didRetrieveListFromServer:function(b,e){var a=e.store;
var d=e.query;var f=d.get("recordType");this.log("RestDataSource.didRetrieveListFromServer()");
this.log("  Record type requested = %s",f.toString());if(SC.ok(b)){this.log("  ...SUCCESS");
var c=b.get("body").map(function(g){return this.camelizeKeys(g)},this);a.loadRecords(f,c);
a.dataSourceDidFetchQuery(d)}else{this.log("  ...FAILURE");a.dataSourceDidErrorQuery(d)
}},camelizeKeys:function(c){var a={};for(var b in c){if(c.hasOwnProperty(b)){a[b.camelize()]=c[b]
}}return a},log:function(){if(Smartgraphs.get("logDataSource")){console.log.apply(console,arguments)
}}});Smartgraphs.ActivityPage=SC.Record.extend({url:SC.Record.attr(String),primaryKey:"url",activity:SC.Record.toOne("Smartgraphs.Activity",{inverse:"pages",isMaster:YES}),name:SC.Record.attr(String),index:SC.Record.attr(Number),introText:SC.Record.attr(String),steps:SC.Record.toMany("Smartgraphs.ActivityStep",{inverse:"activityPage"}),firstStep:SC.Record.toOne("Smartgraphs.ActivityStep"),context:{},isSelectable:NO,stepListUrl:SC.Record.attr(String),stepsQuery:function(){return SC.Query.create({isStepsQuery:YES,recordType:Smartgraphs.ActivityStep,conditions:"page = {page}",parameters:{page:this}})
}.property().cacheable()});sc_require("models/activity_page");Smartgraphs.ActivityPage.FIXTURES=[];
Smartgraphs.ActivityStep=SC.Record.extend({url:SC.Record.attr(String),primaryKey:"url",activityPage:SC.Record.toOne("Smartgraphs.ActivityPage",{inverse:"steps",isMaster:YES}),initialPaneConfig:SC.Record.toOne(String),singleGraph:SC.Record.toOne("Smartgraphs.Graph"),topGraph:SC.Record.toOne("Smartgraphs.Graph"),bottomGraph:SC.Record.toOne("Smartgraphs.Graph"),singleImage:SC.Record.attr(String),topImage:SC.Record.attr(String),bottomImage:SC.Record.attr(String),beforeText:SC.Record.attr(String),responseTemplate:SC.Record.toOne("Smartgraphs.ResponseTemplate"),afterText:SC.Record.attr(String),startCommands:SC.Record.attr(Array),shouldFinishImmediately:SC.Record.attr(Boolean),shouldWaitForSubmissibleResponse:SC.Record.attr(Boolean),submissibilityInspector:SC.Record.attr(Object),submissibilityCriterion:SC.Record.attr(Object),triggeredCommands:SC.Record.toMany("Smartgraphs.TriggeredCommands"),responseInspector:SC.Record.attr(Object),responseBranches:SC.Record.attr(Array),defaultBranch:SC.Record.toOne("Smartgraphs.ActivityStep"),isFinalStep:SC.Record.attr(Boolean),shouldAutoAdvancePage:SC.Record.attr(Boolean),hideSubmitButton:SC.Record.attr(Boolean),submitButtonTitle:SC.Record.attr(String),nextButtonShouldSubmit:SC.Record.attr(Boolean)});
sc_require("models/activity_step");Smartgraphs.ActivityStep.FIXTURES=[];Smartgraphs.Axes=SC.Record.extend({url:SC.Record.attr(String),primaryKey:"url",xMin:SC.Record.attr(Number),xMax:SC.Record.attr(Number),xSteps:SC.Record.attr(Number),xLabel:SC.Record.attr(String),xLabelAbbreviated:SC.Record.attr(String),yMin:SC.Record.attr(Number),yMax:SC.Record.attr(Number),ySteps:SC.Record.attr(Number),yLabel:SC.Record.attr(String),yLabelAbbreviated:SC.Record.attr(String)});
sc_require("models/axes");Smartgraphs.Axes.FIXTURES=[{url:"/backend/axes/1/5m-15s",xMin:0,xMax:15,xSteps:15,xLabel:"Time (seconds)",xLabelAbbreviated:"Time (s)",yMin:0,yMax:5,ySteps:10,yLabel:"Position (meters)",yLabelAbbreviated:"Position (m)"},{url:"/backend/axes/2/5m-25s",xMin:0,xMax:25,xSteps:25,xLabel:"Time (seconds)",xLabelAbbreviated:"Time (s)",yMin:0,yMax:5,ySteps:10,yLabel:"Position (meters)",yLabelAbbreviated:"Position (m)"}];
Smartgraphs.Button=SC.Record.extend({name:SC.Record.attr(String),title:SC.Record.attr(String),description:SC.Record.attr(String),width:SC.Record.attr(Number),isSubmitButton:SC.Record.attr(Boolean)});
sc_require("models/button");Smartgraphs.Button.FIXTURES=[];Smartgraphs.DataPoint=SC.Record.extend({x:SC.Record.attr(Number),y:SC.Record.attr(Number),series:SC.Record.toOne("Smartgraphs.DataSeries",{inverse:"points"})});
sc_require("models/data_point");Smartgraphs.DataPoint.FIXTURES=[{x:0,y:4.016,guid:1,series:"/backend/activity/1/series/walking-example-1"},{x:0.2,y:3.965,guid:2,series:"/backend/activity/1/series/walking-example-1"},{x:0.4,y:3.899,guid:3,series:"/backend/activity/1/series/walking-example-1"},{x:0.6,y:3.826,guid:4,series:"/backend/activity/1/series/walking-example-1"},{x:0.8,y:3.795,guid:5,series:"/backend/activity/1/series/walking-example-1"},{x:1,y:3.793,guid:6,series:"/backend/activity/1/series/walking-example-1"},{x:1.2,y:3.768,guid:7,series:"/backend/activity/1/series/walking-example-1"},{x:1.4,y:3.695,guid:8,series:"/backend/activity/1/series/walking-example-1"},{x:1.6,y:3.612,guid:9,series:"/backend/activity/1/series/walking-example-1"},{x:1.8,y:3.535,guid:10,series:"/backend/activity/1/series/walking-example-1"},{x:2,y:3.453,guid:11,series:"/backend/activity/1/series/walking-example-1"},{x:2.2,y:3.418,guid:12,series:"/backend/activity/1/series/walking-example-1"},{x:2.4,y:3.393,guid:13,series:"/backend/activity/1/series/walking-example-1"},{x:2.6,y:3.321,guid:14,series:"/backend/activity/1/series/walking-example-1"},{x:2.8,y:3.249,guid:15,series:"/backend/activity/1/series/walking-example-1"},{x:3,y:3.175,guid:16,series:"/backend/activity/1/series/walking-example-1"},{x:3.2,y:3.12,guid:17,series:"/backend/activity/1/series/walking-example-1"},{x:3.4,y:3.056,guid:18,series:"/backend/activity/1/series/walking-example-1"},{x:3.6,y:2.992,guid:19,series:"/backend/activity/1/series/walking-example-1"},{x:3.8,y:2.925,guid:20,series:"/backend/activity/1/series/walking-example-1"},{x:4,y:2.868,guid:21,series:"/backend/activity/1/series/walking-example-1"},{x:4.2,y:2.829,guid:22,series:"/backend/activity/1/series/walking-example-1"},{x:4.4,y:2.791,guid:23,series:"/backend/activity/1/series/walking-example-1"},{x:4.6,y:2.794,guid:24,series:"/backend/activity/1/series/walking-example-1"},{x:4.8,y:2.669,guid:25,series:"/backend/activity/1/series/walking-example-1"},{x:5,y:2.596,guid:26,series:"/backend/activity/1/series/walking-example-1"},{x:5.2,y:2.559,guid:27,series:"/backend/activity/1/series/walking-example-1"},{x:5.4,y:2.503,guid:28,series:"/backend/activity/1/series/walking-example-1"},{x:5.6,y:2.441,guid:29,series:"/backend/activity/1/series/walking-example-1"},{x:5.8,y:2.398,guid:30,series:"/backend/activity/1/series/walking-example-1"},{x:6,y:2.339,guid:31,series:"/backend/activity/1/series/walking-example-1"},{x:6.2,y:2.331,guid:32,series:"/backend/activity/1/series/walking-example-1"},{x:6.4,y:2.268,guid:33,series:"/backend/activity/1/series/walking-example-1"},{x:6.6,y:2.178,guid:34,series:"/backend/activity/1/series/walking-example-1"},{x:6.8,y:2.124,guid:35,series:"/backend/activity/1/series/walking-example-1"},{x:7,y:2.062,guid:36,series:"/backend/activity/1/series/walking-example-1"},{x:7.2,y:2.001,guid:37,series:"/backend/activity/1/series/walking-example-1"},{x:7.4,y:1.971,guid:38,series:"/backend/activity/1/series/walking-example-1"},{x:7.6,y:1.935,guid:39,series:"/backend/activity/1/series/walking-example-1"},{x:7.8,y:1.883,guid:40,series:"/backend/activity/1/series/walking-example-1"},{x:8,y:1.824,guid:41,series:"/backend/activity/1/series/walking-example-1"},{x:8.2,y:1.763,guid:42,series:"/backend/activity/1/series/walking-example-1"},{x:8.4,y:1.706,guid:43,series:"/backend/activity/1/series/walking-example-1"},{x:8.6,y:1.644,guid:44,series:"/backend/activity/1/series/walking-example-1"},{x:8.8,y:1.604,guid:45,series:"/backend/activity/1/series/walking-example-1"},{x:9,y:1.557,guid:46,series:"/backend/activity/1/series/walking-example-1"},{x:9.2,y:1.54,guid:47,series:"/backend/activity/1/series/walking-example-1"},{x:9.4,y:1.478,guid:48,series:"/backend/activity/1/series/walking-example-1"},{x:9.6,y:1.424,guid:49,series:"/backend/activity/1/series/walking-example-1"},{x:9.8,y:1.344,guid:50,series:"/backend/activity/1/series/walking-example-1"},{x:10,y:1.28,guid:51,series:"/backend/activity/1/series/walking-example-1"},{x:10.2,y:1.244,guid:52,series:"/backend/activity/1/series/walking-example-1"},{x:10.4,y:1.189,guid:53,series:"/backend/activity/1/series/walking-example-1"},{x:10.6,y:1.132,guid:54,series:"/backend/activity/1/series/walking-example-1"},{x:10.8,y:1.082,guid:55,series:"/backend/activity/1/series/walking-example-1"},{x:11,y:1.036,guid:56,series:"/backend/activity/1/series/walking-example-1"},{x:11.2,y:0.984,guid:57,series:"/backend/activity/1/series/walking-example-1"},{x:11.4,y:0.926,guid:58,series:"/backend/activity/1/series/walking-example-1"},{x:11.6,y:0.873,guid:59,series:"/backend/activity/1/series/walking-example-1"},{x:11.8,y:0.835,guid:60,series:"/backend/activity/1/series/walking-example-1"},{x:12,y:0.778,guid:61,series:"/backend/activity/1/series/walking-example-1"},{x:12.2,y:0.72,guid:62,series:"/backend/activity/1/series/walking-example-1"},{x:12.4,y:0.694,guid:63,series:"/backend/activity/1/series/walking-example-1"},{x:12.6,y:0.651,guid:64,series:"/backend/activity/1/series/walking-example-1"},{x:12.8,y:0.623,guid:65,series:"/backend/activity/1/series/walking-example-1"},{x:13,y:0.554,guid:66,series:"/backend/activity/1/series/walking-example-1"},{x:13.2,y:0.493,guid:67,series:"/backend/activity/1/series/walking-example-1"},{x:13.4,y:0.446,guid:68,series:"/backend/activity/1/series/walking-example-1"},{x:13.6,y:0.393,guid:69,series:"/backend/activity/1/series/walking-example-1"},{x:13.8,y:0.351,guid:70,series:"/backend/activity/1/series/walking-example-1"},{x:14,y:0.314,guid:71,series:"/backend/activity/1/series/walking-example-1"},{x:14.2,y:0.287,guid:72,series:"/backend/activity/1/series/walking-example-1"},{x:14.4,y:0.266,guid:73,series:"/backend/activity/1/series/walking-example-1"},{x:14.6,y:0.239,guid:74,series:"/backend/activity/1/series/walking-example-1"},{x:14.8,y:0.191,guid:75,series:"/backend/activity/1/series/walking-example-1"},{x:15,y:0.133,guid:76,series:"/backend/activity/1/series/walking-example-1"},{x:0,y:2,guid:100,series:"/backend/activity/1/series/walking-away-example"},{x:0.4,y:2.039,guid:102,series:"/backend/activity/1/series/walking-away-example"},{x:0.8,y:2.175,guid:104,series:"/backend/activity/1/series/walking-away-example"},{x:1.2,y:2.262,guid:106,series:"/backend/activity/1/series/walking-away-example"},{x:1.6,y:2.352,guid:108,series:"/backend/activity/1/series/walking-away-example"},{x:2,y:2.377,guid:110,series:"/backend/activity/1/series/walking-away-example"},{x:2.4,y:2.378,guid:112,series:"/backend/activity/1/series/walking-away-example"},{x:2.8,y:2.415,guid:114,series:"/backend/activity/1/series/walking-away-example"},{x:3.2,y:2.473,guid:116,series:"/backend/activity/1/series/walking-away-example"},{x:3.6,y:2.495,guid:118,series:"/backend/activity/1/series/walking-away-example"},{x:4,y:2.53,guid:120,series:"/backend/activity/1/series/walking-away-example"},{x:4.4,y:2.558,guid:122,series:"/backend/activity/1/series/walking-away-example"},{x:4.8,y:2.601,guid:124,series:"/backend/activity/1/series/walking-away-example"},{x:5.2,y:2.641,guid:126,series:"/backend/activity/1/series/walking-away-example"},{x:5.6,y:2.661,guid:128,series:"/backend/activity/1/series/walking-away-example"},{x:6,y:2.676,guid:130,series:"/backend/activity/1/series/walking-away-example"},{x:6.4,y:2.695,guid:132,series:"/backend/activity/1/series/walking-away-example"},{x:6.8,y:2.754,guid:134,series:"/backend/activity/1/series/walking-away-example"},{x:7.2,y:2.799,guid:136,series:"/backend/activity/1/series/walking-away-example"},{x:7.6,y:2.829,guid:138,series:"/backend/activity/1/series/walking-away-example"},{x:8,y:2.881,guid:140,series:"/backend/activity/1/series/walking-away-example"},{x:8.4,y:2.892,guid:142,series:"/backend/activity/1/series/walking-away-example"},{x:8.8,y:2.939,guid:144,series:"/backend/activity/1/series/walking-away-example"},{x:9.2,y:2.956,guid:146,series:"/backend/activity/1/series/walking-away-example"},{x:9.6,y:2.989,guid:148,series:"/backend/activity/1/series/walking-away-example"},{x:10,y:3.012,guid:150,series:"/backend/activity/1/series/walking-away-example"},{x:10.4,y:3.049,guid:152,series:"/backend/activity/1/series/walking-away-example"},{x:10.8,y:3.072,guid:154,series:"/backend/activity/1/series/walking-away-example"},{x:11.2,y:3.119,guid:156,series:"/backend/activity/1/series/walking-away-example"},{x:11.6,y:3.161,guid:158,series:"/backend/activity/1/series/walking-away-example"},{x:12,y:3.212,guid:160,series:"/backend/activity/1/series/walking-away-example"},{x:12.4,y:3.246,guid:162,series:"/backend/activity/1/series/walking-away-example"},{x:12.8,y:3.293,guid:164,series:"/backend/activity/1/series/walking-away-example"},{x:13.2,y:3.322,guid:166,series:"/backend/activity/1/series/walking-away-example"},{x:13.6,y:3.359,guid:168,series:"/backend/activity/1/series/walking-away-example"},{x:14,y:3.397,guid:170,series:"/backend/activity/1/series/walking-away-example"},{x:14.4,y:3.415,guid:172,series:"/backend/activity/1/series/walking-away-example"},{x:14.8,y:3.45,guid:174,series:"/backend/activity/1/series/walking-away-example"},{x:15.2,y:3.481,guid:176,series:"/backend/activity/1/series/walking-away-example"},{x:15.6,y:3.517,guid:178,series:"/backend/activity/1/series/walking-away-example"},{x:16,y:3.53,guid:180,series:"/backend/activity/1/series/walking-away-example"},{x:16.4,y:3.57,guid:182,series:"/backend/activity/1/series/walking-away-example"},{x:16.8,y:3.595,guid:184,series:"/backend/activity/1/series/walking-away-example"},{x:17.2,y:3.618,guid:186,series:"/backend/activity/1/series/walking-away-example"},{x:17.6,y:3.668,guid:188,series:"/backend/activity/1/series/walking-away-example"},{x:18,y:3.677,guid:190,series:"/backend/activity/1/series/walking-away-example"},{x:18.4,y:3.71,guid:192,series:"/backend/activity/1/series/walking-away-example"},{x:18.8,y:3.74,guid:194,series:"/backend/activity/1/series/walking-away-example"},{x:19.2,y:3.839,guid:196,series:"/backend/activity/1/series/walking-away-example"},{x:19.6,y:3.901,guid:198,series:"/backend/activity/1/series/walking-away-example"},{x:20,y:4,guid:200,series:"/backend/activity/1/series/walking-away-example"},{x:0,y:2.04,guid:201,series:"/backend/activity/1/series/walking-toward-example"},{x:0.4,y:2.006,guid:203,series:"/backend/activity/1/series/walking-toward-example"},{x:0.8,y:1.994,guid:205,series:"/backend/activity/1/series/walking-toward-example"},{x:1.2,y:1.959,guid:207,series:"/backend/activity/1/series/walking-toward-example"},{x:1.6,y:1.928,guid:209,series:"/backend/activity/1/series/walking-toward-example"},{x:2,y:1.891,guid:211,series:"/backend/activity/1/series/walking-toward-example"},{x:2.4,y:1.853,guid:213,series:"/backend/activity/1/series/walking-toward-example"},{x:2.8,y:1.827,guid:215,series:"/backend/activity/1/series/walking-toward-example"},{x:3.2,y:1.783,guid:217,series:"/backend/activity/1/series/walking-toward-example"},{x:3.6,y:1.748,guid:219,series:"/backend/activity/1/series/walking-toward-example"},{x:4,y:1.708,guid:221,series:"/backend/activity/1/series/walking-toward-example"},{x:4.4,y:1.679,guid:223,series:"/backend/activity/1/series/walking-toward-example"},{x:4.8,y:1.641,guid:225,series:"/backend/activity/1/series/walking-toward-example"},{x:5.2,y:1.622,guid:227,series:"/backend/activity/1/series/walking-toward-example"},{x:5.6,y:1.621,guid:229,series:"/backend/activity/1/series/walking-toward-example"},{x:6,y:1.602,guid:231,series:"/backend/activity/1/series/walking-toward-example"},{x:6.4,y:1.554,guid:233,series:"/backend/activity/1/series/walking-toward-example"},{x:6.8,y:1.488,guid:235,series:"/backend/activity/1/series/walking-toward-example"},{x:7.2,y:1.45,guid:237,series:"/backend/activity/1/series/walking-toward-example"},{x:7.6,y:1.428,guid:239,series:"/backend/activity/1/series/walking-toward-example"},{x:8,y:1.393,guid:241,series:"/backend/activity/1/series/walking-toward-example"},{x:8.4,y:1.354,guid:243,series:"/backend/activity/1/series/walking-toward-example"},{x:8.8,y:1.293,guid:245,series:"/backend/activity/1/series/walking-toward-example"},{x:9.2,y:1.258,guid:247,series:"/backend/activity/1/series/walking-toward-example"},{x:9.6,y:1.221,guid:249,series:"/backend/activity/1/series/walking-toward-example"},{x:10,y:1.197,guid:251,series:"/backend/activity/1/series/walking-toward-example"},{x:10.4,y:1.156,guid:253,series:"/backend/activity/1/series/walking-toward-example"},{x:10.8,y:1.124,guid:255,series:"/backend/activity/1/series/walking-toward-example"},{x:11.2,y:1.089,guid:257,series:"/backend/activity/1/series/walking-toward-example"},{x:11.6,y:1.052,guid:259,series:"/backend/activity/1/series/walking-toward-example"},{x:12,y:1.002,guid:261,series:"/backend/activity/1/series/walking-toward-example"},{x:12.4,y:0.951,guid:263,series:"/backend/activity/1/series/walking-toward-example"},{x:12.8,y:0.913,guid:265,series:"/backend/activity/1/series/walking-toward-example"},{x:13.2,y:0.879,guid:267,series:"/backend/activity/1/series/walking-toward-example"},{x:13.6,y:0.837,guid:269,series:"/backend/activity/1/series/walking-toward-example"},{x:14,y:0.801,guid:271,series:"/backend/activity/1/series/walking-toward-example"},{x:14.4,y:0.772,guid:273,series:"/backend/activity/1/series/walking-toward-example"},{x:14.8,y:0.729,guid:275,series:"/backend/activity/1/series/walking-toward-example"},{x:15.2,y:0.656,guid:277,series:"/backend/activity/1/series/walking-toward-example"},{x:15.6,y:0.621,guid:279,series:"/backend/activity/1/series/walking-toward-example"},{x:16,y:0.602,guid:281,series:"/backend/activity/1/series/walking-toward-example"},{x:16.4,y:0.55,guid:283,series:"/backend/activity/1/series/walking-toward-example"},{x:16.8,y:0.517,guid:285,series:"/backend/activity/1/series/walking-toward-example"},{x:17.2,y:0.473,guid:287,series:"/backend/activity/1/series/walking-toward-example"},{x:17.6,y:0.427,guid:289,series:"/backend/activity/1/series/walking-toward-example"},{x:18,y:0.353,guid:291,series:"/backend/activity/1/series/walking-toward-example"},{x:18.4,y:0.297,guid:293,series:"/backend/activity/1/series/walking-toward-example"},{x:18.8,y:0.249,guid:295,series:"/backend/activity/1/series/walking-toward-example"},{x:19.2,y:0.2,guid:297,series:"/backend/activity/1/series/walking-toward-example"},{x:19.6,y:0.134,guid:299,series:"/backend/activity/1/series/walking-toward-example"},{x:20,y:0.133,guid:301,series:"/backend/activity/1/series/walking-toward-example"}];
Smartgraphs.DataPointView=RaphaelViews.RaphaelView.extend({displayProperties:"content.x content.y isEnabled fill stroke radius".w(),notSelectedFillBinding:".parentView.color",notSelectedStrokeBinding:".parentView.color",selectedFill:"#aa0000",selectedStroke:"#aa0000",hoveredRadius:5,notHoveredRadius:3,isEnabled:YES,isHovered:NO,isSelected:NO,layerIsCacheable:YES,isPoolable:YES,fill:function(){return(this.get("isSelected")?this.get("selectedFill"):this.get("notSelectedFill"))
}.property("isSelected","selectedFill","notSelectedFill").cacheable(),stroke:function(){return(this.get("isSelected")?this.get("selectedStroke"):this.get("notSelectedStroke"))
}.property("isSelected","selectedStroke","notSelectedStroke").cacheable(),radius:function(){return(this.get("isHovered")?this.get("hoveredRadius"):this.get("notHoveredRadius"))
}.property("isHovered","hoveredRadius","notHoveredRadius").cacheable(),mouseEntered:function(){this.set("isHovered",YES)
},mouseExited:function(){this.set("isHovered",NO)},renderCallback:function(f,b,e,a,d,c){return f.circle(b,e,a).attr({fill:d,stroke:c})
},render:function(c,a){var h=this.get("fill"),i=this.get("stroke"),d=this.get("radius");
var g=this.getPath("content.x"),e=this.getPath("content.y");var f=this.getPath("parentView.graphView").coordinatesForPoint(g,e);
if(a){c.callback(this,this.renderCallback,f.x,f.y,d,h,i)}else{var b=c.raphael();b.attr({cx:f.x,cy:f.y,r:d,fill:h,stroke:i})
}}});sc_require("views/data_point");Smartgraphs.DataSeriesView=RaphaelViews.RaphaelCollectionView.extend({exampleView:Smartgraphs.DataPointView,useFastPath:YES,colorBinding:".item.color",content:function(){var a=this.get("item");
if(!a){return null}return Smartgraphs.store.find(SC.Query.local(Smartgraphs.DataPoint,{conditions:"series = {series}",series:a,orderBy:"id"}))
}.property("series").cacheable()});sc_require("views/data_series");Smartgraphs.DataSeries=SC.Record.extend({url:SC.Record.attr(String),primaryKey:"url",name:SC.Record.attr(String),session:SC.Record.toOne("Smartgraphs.Session"),isExample:SC.Record.attr(Boolean),points:SC.Record.toMany("Smartgraphs.DataPoint",{inverse:"series"}),defaultColor:SC.Record.attr(String),color:null});
Smartgraphs.DataSeries.LINE_GRAPH=1;Smartgraphs.DataSeries.SCATTER_PLOT=2;Smartgraphs.DataSeries.viewClass=Smartgraphs.DataSeriesView;
sc_require("models/data_series");Smartgraphs.DataSeries.FIXTURES=[{url:"/backend/activity/1/series/walking-example-1",name:"walking-example-1",isExample:YES,points:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],session:null,defaultColor:null},{url:"/backend/activity/1/series/walking-away-example",name:"walking-away-example",isExample:YES,points:(function(){var b=[];
for(var a=100;a<=200;a+=2){b.push(a)}return b}()),session:null,defaultColor:null},{url:"/backend/activity/1/series/walking-toward-example",name:"walking-toward-example",isExample:YES,points:(function(){var b=[];
for(var a=201;a<=301;a+=2){b.push(a)}return b}()),session:null,defaultColor:null}];
Smartgraphs.Annotation=SC.Record.extend({url:SC.Record.attr(String),primaryKey:"url",isAnnotation:YES,name:SC.Record.attr(String),session:SC.Record.toOne("Smartgraphs.Session"),isExample:SC.Record.attr(Boolean)});
Smartgraphs.FreehandSketchView=RaphaelViews.RaphaelView.extend({stroke:"#000000",strokeWidth:2,displayProperties:"item.points.[]".w(),renderCallback:function(d,a,b,c){return d.path(a).attr({stroke:b,"stroke-width":c})
},render:function(b,a){var c=this.getPath("parentView.parentView");var h=this.get("item");
var j=(h?h.get("points"):null)||[{x:0,y:0}];var e=[];var g,f;for(var d=0,k=j.get("length");
d<k;d++){g=j.objectAt(d);f=c.coordinatesForPoint(g.x,g.y)||{x:0,y:0};e.push(d===0?"M":"L");
e.push(Math.round(f.x));e.push(" ");e.push(Math.round(f.y))}var m=e.join("")||"M0 0";
if(a){b.callback(this,this.renderCallback,m,this.get("stroke"),this.get("strokeWidth"))
}else{var l=b.raphael();l.attr({path:m})}}});sc_require("models/annotation");sc_require("views/freehand_sketch");
Smartgraphs.FreehandSketch=Smartgraphs.Annotation.extend({points:SC.Record.attr(Array),isDirectional:SC.Record.attr(Boolean)});
Smartgraphs.FreehandSketch.viewClass=Smartgraphs.FreehandSketchView;sc_require("models/freehand_sketch");
Smartgraphs.FreehandSketch.FIXTURES=[{url:"/backend/activity/1/annotations/sketch-to-match",name:"sketch-to-match",isExample:YES,points:[{x:0,y:3},{x:3,y:1},{x:9,y:2},{x:15,y:0}],session:null}];
Smartgraphs.Graph=Smartgraphs.Annotation.extend({url:SC.Record.attr(String),primaryKey:"url",name:SC.Record.attr(String),description:SC.Record.attr(String),title:SC.Record.attr(String),axes:SC.Record.toOne("Smartgraphs.Axes"),initialSeries:SC.Record.attr(Array),initialAnnotations:SC.Record.attr(Array)});
sc_require("models/graph");Smartgraphs.Graph.FIXTURES=[{url:"/backend/activity/1/graph/1/prediction-away",name:"Prediction-Away",description:"Prediction graph of movement away",title:"Away",axes:"/backend/axes/1/5m-15s",initialSeries:[],initialAnnotations:[]},{url:"/backend/activity/1/graph/2/prediction-toward",name:"Prediction-Toward",title:"Toward",description:"Prediction graph of movement towards",axes:"/backend/axes/1/5m-15s",initialSeries:[],initialAnnotations:[]},{url:"/backend/activity/1/graph/3/sensor-playing",name:"Sensor-Playing",description:"Playing around with the sensor in page 3",title:"Position vs. Time",axes:"/backend/axes/1/5m-15s",initialSeries:[],initialAnnotations:[]},{url:"/backend/activity/1/graph/4/graph-with-away-prediction",name:"Match-Away-With-Sensor",description:"Graph with 'away' prediction for adding 'away' sensor data in page 4",title:"Away",axes:"/backend/axes/1/5m-15s",initialSeries:[],initialAnnotations:[{type:"Smartgraphs.FreehandSketch",name:"prediction-away"}]},{url:"/backend/activity/1/graph/5/graph-with-toward-prediction",name:"Match-Toward-With-Sensor",description:"Graph with 'toward' prediction for adding 'toward' sensor data in page 4",title:"Toward",axes:"/backend/axes/1/5m-15s",initialSeries:[],initialAnnotations:[{type:"Smartgraphs.FreehandSketch",name:"prediction-toward"}]},{url:"/backend/activity/1/graph/6/sensor-away",name:"Sensor-Away",description:"Graph with'away' sensor data from page 4",title:"Away",axes:"/backend/axes/1/5m-15s",initialSeries:["sensor-away"],initialAnnotations:[]},{url:"/backend/activity/1/graph/7/sensor-toward",name:"Match-Toward-With-Sensor",description:"Graph with 'toward' prediction for adding 'toward' sensor data in page 4",title:"Toward",axes:"/backend/axes/1/5m-15s",initialSeries:["sensor-toward"],initialAnnotations:[]},{url:"/backend/activity/1/graph/8/walking-example-1",name:"Walking",description:"Graph for multiple choice question in page 6",title:"An Example Walk",axes:"/backend/axes/1/5m-15s",initialSeries:["walking-example-1"],initialAnnotations:[{type:"Smartgraphs.HighlightedPoint",name:"walking-first-point"}]},{url:"/backend/activity/1/graph/9/two-walkers",name:"Two walkers",description:"Graph for multiple choice question in page 6",title:"Position vs. Time",axes:"/backend/axes/2/5m-25s",initialSeries:["walking-away-example","walking-toward-example"],initialAnnotations:[]},{url:"/backend/activity/1/graph/10/graph-to-match",name:"Graph to match",description:"Graph to match with sensor data",title:"Position vs. Time",axes:"/backend/axes/1/5m-15s",initialSeries:[],initialAnnotations:[{type:"Smartgraphs.FreehandSketch",name:"sketch-to-match"}]}];
Smartgraphs.HighlightedPointView=RaphaelViews.RaphaelView.extend({radius:8,stroke:"#cc0000",strokeWidth:2,strokeOpacity:1,fill:"#ffffff",fillOpacity:0,displayProperties:"item.point.x item.point.y radius stroke strokeWidth strokeOpacity fill fillOpacity".w(),renderCallback:function(b,a){return b.circle(a.x,a.y,a.r).attr(a)
},render:function(c,a){var d=this.getPath("parentView.parentView");var e=this.get("item");
var i=e.get("point");var h=i?i.get("x"):0;var f=i?i.get("y"):0;var g=d.coordinatesForPoint(h,f);
var j={cx:g.x,cy:g.y,r:this.get("radius"),stroke:this.get("stroke"),"stroke-width":this.get("strokeWidth"),"stroke-opacity":this.get("strokeOpacity"),fill:this.get("fill"),"fill-opacity":this.get("fillOpacity")};
if(a){c.callback(this,this.renderCallback,j)}else{var b=c.raphael();b.attr(j)}}});
sc_require("models/annotation");sc_require("views/highlighted_point");Smartgraphs.HighlightedPoint=Smartgraphs.Annotation.extend({point:SC.Record.toOne("Smartgraphs.DataPoint")});
Smartgraphs.HighlightedPoint.viewClass=Smartgraphs.HighlightedPointView;sc_require("models/highlighted_point");
Smartgraphs.HighlightedPoint.FIXTURES=[{url:"/backend/activity/1/annotations/walking-first-point",name:"walking-first-point",isExample:YES,session:null,point:1}];
Smartgraphs.ResponseTemplate=SC.Record.extend({url:SC.Record.attr(String),primaryKey:"url",templateString:SC.Record.attr(String),fieldTypes:SC.Record.attr(Array),fieldChoicesList:SC.Record.attr(Array),intialValues:SC.Record.attr(Array),values:[]});
sc_require("models/response_template");Smartgraphs.ResponseTemplate.FIXTURES=[{url:"/backend/response-template/1/numeric",templateString:"",fieldTypes:["numeric"],fieldChoicesList:[null],initialValues:[""]},{url:"/backend/response-template/2/open",templateString:"",fieldTypes:["textarea"],fieldChoicesList:[null],initialValues:[""]},{url:"/backend/response-template/3/walking-example-1",templateString:"",fieldTypes:["multiplechoice"],fieldChoicesList:[["The walker was 4 meters away, getting ready to walk toward the sensor.","The walker was closest to the motion sensor, getting ready to walk away from the sensor.","The walker was 4 meters away from the motion sensor and did not move.","The walker was 4 meters away from the motion sensor, getting ready to walk away from the sensor."]],initialValues:[""]},{url:"/backend/response-template/4/two-walkers",templateString:"",fieldTypes:["multiplechoice"],fieldChoicesList:[["My friend and I stood 2 meters away from the sensor. Together, we walked away from the sensor for 20 seconds.","My friend and I stood 2 meters away from the sensor. I walked away from the sensor for 20 seconds while my friend walked toward the sensor for 20 seconds.","I started at the sensor and walked away from the sensor for 20 seconds. My friend started 2 meters away from the sensor and walked away from the sensor for 20 seconds.","I started at the sensor and walked away from the sensor for 20 seconds. My friend started 2 meters away from the sensor and walked toward the sensor for 20 seconds."]],initialValues:[""]}];
Smartgraphs.Session=SC.Record.extend({user:SC.Record.toOne("Smartgraphs.User",{inverse:"session",isMaster:YES}),steps:SC.Record.toMany("Smartgraphs.  SessionStep",{inverse:"session"})});
sc_require("models/session");Smartgraphs.Session.FIXTURES=[{guid:"empty-session",user:null,steps:[]}];
Smartgraphs.SessionStep=SC.Record.extend({values:SC.Record.attr(Array),series:SC.Record.toOne("Smartgraphs.DataSeries")});
sc_require("models/session_step");Smartgraphs.SessionStep.FIXTURES=[];Smartgraphs.TriggeredCommands=SC.Record.extend({systemInspector:SC.Record.attr(Object),triggerCriterion:SC.Record.attr(Object),onCommands:SC.Record.attr(Object),offCommands:SC.Record.attr(Object)});
sc_require("models/triggered_commands");Smartgraphs.TriggeredCommands.FIXTURES=[];
Smartgraphs.User=SC.Record.extend({userId:SC.Record.attr(String),name:SC.Record.attr(String),sessions:SC.Record.toMany(Smartgraphs.Session,{inverse:"user"})});
sc_require("models/user");Smartgraphs.User.FIXTURES=[{guid:"default",userId:"anonymous",name:"Anonymous User",sessions:[]}];
Smartgraphs.Inspector=SC.Object.extend({init:function(){var a=this.get("config");
this.configure(a||{});arguments.callee.base.apply(this,arguments)}});sc_require("inspectors/inspector");
Smartgraphs.ResponseFieldsInspector=Smartgraphs.Inspector.extend({value:null,fieldIndex:null,configure:function(a){this.set("fieldIndex",a.fieldIndex)
},inspect:function(){var b=Smartgraphs.responseTemplateController.get("values");var a=this.get("fieldIndex");
if(!SC.none(a)){b=b[a]}this.set("value",b);return b},watch:function(){Smartgraphs.responseTemplateController.addObserver("values.[]",this,this.inspect)
},stopWatching:function(){Smartgraphs.responseTemplateController.removeObserver("values.[]",this,this.inspect)
}});sc_require("inspectors/response_fields");Smartgraphs.FirstResponseFieldInspector=Smartgraphs.ResponseFieldsInspector.extend({configure:function(a){a.fieldIndex=0;
arguments.callee.base.apply(this,arguments)}});sc_require("inspectors/inspector");
Smartgraphs.SketchLengthInspector=Smartgraphs.Inspector.extend({value:null,sketch:null,checkContinuosly:null,configure:function(b){this.set("checkContinuously",b.check&&b.check==="continuously");
var a=Smartgraphs.activityViewController.graphControllerFor(Smartgraphs.freehandInputController.get("pane"));
if(!a){return}this.set("sketch",a.findAnnotationByName(b.annotationName))},inspect:function(){var d;
var c=this.getPath("sketch.points");if(!c||c.get("length")===0){d=-1}else{var b=c.getEach("x");
var a=Math.min.apply(null,b);var e=Math.max.apply(null,b);d=e-a}this.set("value",d);
console.log("inspector value: ",d);return d},inspectOnStateChange:function(){var a=Smartgraphs.get("firstResponder");
if(a===Smartgraphs.FREEHAND_INPUT_COMPLETED||a===Smartgraphs.FREEHAND_INPUT_READY){this.inspect()
}},watch:function(){var a;if(this.get("checkContinuously")){a=this.get("sketch");
if(a){a.addObserver("points.[]",this,this.inspect)}}else{Smartgraphs.addObserver("firstResponder",this,this.inspectOnStateChange)
}},stopWatching:function(){var a;if(this.get("checkContinuously")){a=this.get("sketch");
if(a){a.removeObserver("points.[]",this,this.inspect)}}else{Smartgraphs.removeObserver("firstResponder",this,this.inspectOnStateChange)
}}});(function(){var d;var f={or:[{equals:["value",{literal:"one"}]},{equals:["value",{literal:"two"}]}]};
function g(l,m){for(var j=0,k=l.length;j<k;j++){if(d(l[j],m)){return true}}return false
}function i(l,m){for(var j=0,k=l.length;j<k;j++){if(!d(l[j],m)){return false}}return true
}function b(j,k){return(d(j[0],k)>d(j[1],k))}function e(j,k){return d(j[0],k)===d(j[1],k)
}function a(j,k){return(d(j,k)||"").strip()}function h(m,o){var l=d(m[0],o);var n=d(m[1],o);
for(var j=0,k=n.length;j<k;j++){if(l===n[j]){return true}}return false}function c(j,k){return(d(j,k)||[]).length
}d=function(l,k){if(l==="value"){return k}if(typeof(l)==="string"||typeof(l)==="number"||l.splice===[].splice||l===undefined||l===null){return l
}for(var m in l){if(l.hasOwnProperty(m)){var j=l[m];switch(m){case"literal":return j;
case"or":return g(j,k);case"and":return i(j,k);case"equals":return e(j,k);case"strip":return a(j,k);
case"in":return h(j,k);case"length":return c(j,k);case"gt":return b(j,k)}console.error('invalid expression operator: "'+m+'"');
return}}};Smartgraphs.evaluate=d}());Smartgraphs.Activity=SC.Record.extend({url:SC.Record.attr(String),primaryKey:"url",title:SC.Record.attr(String),pages:SC.Record.toMany("Smartgraphs.ActivityPage",{inverse:"activity",orderBy:"index"}),context:{},pageListUrl:SC.Record.attr(String),pagesQuery:function(){return SC.Query.create({isPagesQuery:YES,recordType:Smartgraphs.ActivityPage,conditions:"activity = {activity}",parameters:{activity:this}})
}.property().cacheable()});Smartgraphs.READY=SC.Responder.create({nextResponder:null,fencedActivityId:null,didBecomeFirstResponder:function(){SC.routes.add("*activityId",this,"route")
},willLoseFirstResponder:function(){},route:function(b){var a=b.activityId;if(a==="fence"){if(this.fencedActivityId){SC.routes.set("location",this.fencedActivityId)
}}else{if(a){if(a===this.fencedActivityId){Smartgraphs.sendAction("openActivity",this,{id:this.fencedActivityId})
}else{this.fencedActivityId=a;SC.routes.set("location","fence")}}}},openActivity:function(b,a){var c=Smartgraphs.activityController.get("content");
if(c&&c.get("id")===a.id){return YES}Smartgraphs.activityController.set("content",Smartgraphs.store.find(Smartgraphs.Activity,a.id));
Smartgraphs.makeFirstResponder(Smartgraphs.LOADING_ACTIVITY);return YES}});sc_require("states/ready");
Smartgraphs.ACTIVITY=SC.Responder.create({nextResponder:Smartgraphs.READY,didBecomeFirstResponder:function(){Smartgraphs.appWindowController.showActivityView()
},willLoseFirstResponder:function(){Smartgraphs.activityController.cleanup()}});sc_require("states/activity");
Smartgraphs.ACTIVITY_DONE=SC.Responder.create({nextResponder:Smartgraphs.ACTIVITY});
sc_require("states/activity");Smartgraphs.ACTIVITY_PAGE_DONE=SC.Responder.create({nextResponder:Smartgraphs.ACTIVITY,didBecomeFirstResponder:function(){if(Smartgraphs.activityPagesController.get("isLastPage")){Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_DONE)
}else{Smartgraphs.activityController.set("canGotoNextPage",YES)}},willLoseFirstResponder:function(){Smartgraphs.activityController.set("canGotoNextPage",NO);
Smartgraphs.activityPageController.cleanup()},gotoNextPage:function(){Smartgraphs.activityPagesController.selectNextPage();
Smartgraphs.activityPageController.set("content",Smartgraphs.activityPagesController.get("selection"));
Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_PAGE_LOADING)}});Smartgraphs.ResourceLoader={loadResources:function(){var b=this.get("subordinateResources");
for(var a=0,c=b.get("length");a<c;a++){b[a].record=null}var d=this.get("masterResource");
d.record=d.load(this);this._watchedRecords=[];this.watch(d.record);return this.checkResourceStatuses()
},watch:function(a){this._watchedRecords.push(a);a.addObserver("status",this,this.checkResourceStatuses)
},checkResourceStatuses:function(){var a=this.get("masterResource").record.get("status");
if(a&SC.Record.READY){return this.checkSubordinateResources()}else{if(a&SC.Record.ERROR){this.cleanupLoading();
if(this.resourceLoadingError){this.resourceLoadingError()}return YES}return NO}},checkSubordinateResources:function(){var d,b=this.get("subordinateResources");
for(var a=0,c=b.get("length");a<c;a++){d=b[a];if(d.record===null){d.record=d.load(this);
this.watch(d.record)}}if(this.subordinateResourcesAreReady()){this.cleanupLoading();
this.resourcesDidLoad();return YES}if(this.subordinateResourcesHaveErrors()){this.cleanupLoading();
if(this.resourceLoadingError){this.resourceLoadingError()}return YES}return NO},cleanupLoading:function(){this._watchedRecords.forEach(function(a){a.removeObserver("status",this,this.checkResourceStatuses)
},this);this._watchedRecords=[]},subordinateResourcesAreReady:function(){var c=this.get("subordinateResources");
for(var a=0,b=c.get("length");a<b;a++){if(c[a].record===null||!(c[a].record.get("status")&SC.Record.READY)){return NO
}}return YES},subordinateResourcesHaveErrors:function(){var c=this.get("subordinateResources");
for(var a=0,b=c.get("length");a<b;a++){if(c[a].record&&(c[a].record.get("status")&SC.Record.ERROR)){return YES
}}return NO},cancelLoading:function(){this.cleanupLoading()}};sc_require("states/activity");
sc_require("states/mixins/resource_loader");Smartgraphs.ACTIVITY_PAGE_LOADING=SC.Responder.create(Smartgraphs.ResourceLoader,{nextResponder:Smartgraphs.ACTIVITY,masterResource:{load:function(){return Smartgraphs.activityPageController.get("content").toArray().objectAt(0)
}},subordinateResources:[{load:function(){return Smartgraphs.store.find(Smartgraphs.activityPageController.get("stepsQuery"))
}}],didBecomeFirstResponder:function(){this.loadResources()},willLoseFirstResponder:function(){this.cancelLoading()
},resourcesDidLoad:function(){Smartgraphs.activityStepController.set("content",Smartgraphs.activityPageController.get("firstStep"));
Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_STEP_LOADING)}});sc_require("states/activity");
Smartgraphs.ACTIVITY_STEP=SC.Responder.create({nextResponder:Smartgraphs.ACTIVITY,didBecomeFirstResponder:function(){Smartgraphs.activityStepController.begin()
},willLoseFirstResponder:function(){Smartgraphs.activityStepController.disableSubmission();
Smartgraphs.responseTemplateController.set("editingShouldBeEnabled",NO)},gotoNextPage:function(){this.submitStep();
this.invokeLast(function(){Smartgraphs.sendAction("gotoNextPage")})},submitStep:function(){if(Smartgraphs.activityStepController.get("canSubmit")){Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_STEP_SUBMITTED)
}return YES},waitForResponse:function(b,a){Smartgraphs.activityStepController.waitForResponse();
Smartgraphs.responseTemplateController.set("editingShouldBeEnabled",YES);return YES
},showSinglePane:function(){return Smartgraphs.activityViewController.showSinglePane()
},showSplitPane:function(){return Smartgraphs.activityViewController.showSplitPane()
},showImage:function(b,a){return Smartgraphs.activityViewController.showImage(a.pane,a.path)
},showGraph:function(b,a){Smartgraphs.activityViewController.showGraph(a.pane,a.graphId);
return YES},hidePane:function(b,a){Smartgraphs.activityViewController.hidePane(a.pane);
return YES},setAxes:function(c,b){var a=Smartgraphs.activityViewController.graphControllerFor(b.pane);
a.setAxes(b.axesId);return YES},displaySeriesOnGraph:function(c,b){var a=Smartgraphs.activityViewController.graphControllerFor(b.pane);
a.addObjectByName(Smartgraphs.DataSeries,b.seriesName);return YES},copyExampleSeriesToGraph:function(d,b){var a=Smartgraphs.activityViewController.graphControllerFor(b.pane);
var c=Smartgraphs.sessionController.createSeries(b.seriesName);Smartgraphs.sessionController.copyExampleSeries(b.exampleSeriesName,b.seriesName);
a.addSeries(c);return YES},createSeriesOnGraph:function(d,b){var a=Smartgraphs.activityViewController.graphControllerFor(b.pane);
var c=Smartgraphs.sessionController.createSeries(b.seriesName);a.addSeries(c);return YES
},removeSeries:function(c,b){var a=Smartgraphs.activityViewController.graphControllerFor(b.pane);
a.removeSeries(b.seriesName);return YES},removeAllSeries:function(b,a){return NO},selectDataSeries:function(c,b){var a=Smartgraphs.activityViewController.graphControllerFor(b.pane);
a.selectSeries(b.seriesName);return YES},createAnnotation:function(d,c){var b=Smartgraphs.activityViewController.graphControllerFor(c.pane);
var a=Smartgraphs.sessionController.createAnnotation(c.annotationName,c.annotationType);
b.addAnnotation(a);return YES},startFreehandInput:function(c,b){Smartgraphs.sendAction("createAnnotation",this,{pane:b.pane,annotationName:b.annotationName,annotationType:Smartgraphs.FreehandSketch});
var a=Smartgraphs.activityViewController.graphControllerFor(b.pane);if(Smartgraphs.freehandInputController.register(b.pane,a,b.annotationName)){Smartgraphs.makeFirstResponder(Smartgraphs.FREEHAND_INPUT);
return YES}},startSensorInput:function(e,c){Smartgraphs.sendAction("createSeriesOnGraph",this,{pane:c.pane,seriesName:c.seriesName});
var a=Smartgraphs.activityViewController.graphControllerFor(c.pane);var d=a&&a.findSeriesByName(c.seriesName);
if(!d){return YES}var b=a.getPath("axes.xMin");var f=a.getPath("axes.xMax");if(Smartgraphs.sensorController.register(c.pane,d,b,f)){Smartgraphs.makeFirstResponder(Smartgraphs.SENSOR);
return YES}}});sc_require("states/activity");sc_require("states/mixins/resource_loader");
Smartgraphs.ACTIVITY_STEP_LOADING=SC.Responder.create(Smartgraphs.ResourceLoader,{nextResponder:Smartgraphs.ACTIVITY,masterResource:{load:function(){return Smartgraphs.activityStepController.get("content")
}},subordinateResources:[],didBecomeFirstResponder:function(){this.loadResources()
},willLoseFirstResponder:function(){this.cancelLoading()},resourcesDidLoad:function(){Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_STEP)
},resourceLoadingError:function(){console.error("Error status loading subordinate resource for %s",this.get("masterResource").record.get("id"))
}});sc_require("states/activity");Smartgraphs.ACTIVITY_STEP_SUBMITTED=SC.Responder.create({nextResponder:Smartgraphs.ACTIVITY,didBecomeFirstResponder:function(){var b=Smartgraphs.activityStepController.get("content");
Smartgraphs.activityStepController.handleSubmission();var a=Smartgraphs.activityStepController.get("content");
if(a===b&&b.get("isFinalStep")){Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_PAGE_DONE)
}},willLoseFirstResponder:function(){Smartgraphs.activityStepController.cleanup()
},gotoStep:function(b,a){var c=Smartgraphs.store.find(Smartgraphs.ActivityStep,a.stepId);
Smartgraphs.activityStepController.set("content",c);Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_STEP_LOADING);
return YES}});sc_require("states/ready");Smartgraphs.ERROR_LOADING_ACTIVITY=SC.Responder.create({nextResponder:Smartgraphs.READY,didBecomeFirstResponder:function(){Smartgraphs.appWindowController.showErrorLoadingActivityView()
}});sc_require("states/activity_step");Smartgraphs.FREEHAND_INPUT=SC.Responder.create({nextResponder:Smartgraphs.ACTIVITY_STEP,didBecomeFirstResponder:function(){var a=Smartgraphs.freehandInputController.enableInput();
if(a){Smartgraphs.activityViewController.revealOnlyClearControl();Smartgraphs.activityViewController.showControls(Smartgraphs.freehandInputController.get("pane"));
Smartgraphs.makeFirstResponder(Smartgraphs.FREEHAND_INPUT_READY)}else{Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_STEP)
}},willLoseFirstResponder:function(){Smartgraphs.freehandInputController.disableInput();
Smartgraphs.activityViewController.hideControls(Smartgraphs.freehandInputController.get("pane"))
},startFreehandInput:function(){console.error("Attempted to startFreehandInput when in FREEHAND_INPUT state");
return YES},clearControlWasClicked:function(){this.clearSketch()},clearSketch:function(){Smartgraphs.freehandInputController.clearStroke();
Smartgraphs.activityViewController.disableAllControls()}});sc_require("states/freehand_input");
Smartgraphs.FREEHAND_INPUT_COMPLETED=SC.Responder.create({nextResponder:Smartgraphs.FREEHAND_INPUT,didBecomeFirstResponder:function(){Smartgraphs.freehandInputController.stopRecording();
Smartgraphs.activityViewController.highlightClearControl()},willLoseFirstResponder:function(){},clearControlWasClicked:function(){return this.clearFreehandSketch()
},clearFreehandSketch:function(){Smartgraphs.freehandInputController.clearSketch();
Smartgraphs.makeFirstResponder(Smartgraphs.FREEHAND_INPUT_READY);return YES}});sc_require("states/freehand_input");
Smartgraphs.FREEHAND_INPUT_READY=SC.Responder.create({nextResponder:Smartgraphs.FREEHAND_INPUT,didBecomeFirstResponder:function(){Smartgraphs.activityViewController.disableAllControls();
Smartgraphs.freehandInputController.startRecording()},willLoseFirstResponder:function(){Smartgraphs.freehandInputController.stopRecording()
},freehandSketchCompleted:function(){Smartgraphs.makeFirstResponder(Smartgraphs.FREEHAND_INPUT_COMPLETED)
}});sc_require("states/ready");sc_require("states/mixins/resource_loader");Smartgraphs.LOADING_ACTIVITY=SC.Responder.create(Smartgraphs.ResourceLoader,{nextResponder:Smartgraphs.READY,masterResource:{load:function(){return Smartgraphs.activityController.get("content")
}},subordinateResources:[{load:function(){return Smartgraphs.store.find(Smartgraphs.activityController.get("pagesQuery"))
}}],didBecomeFirstResponder:function(){if(this.loadResources()){return}Smartgraphs.appWindowController.showActivityLoadingView()
},willLoseFirstResponder:function(){this.cancelLoading()},resourcesDidLoad:function(){Smartgraphs.sessionController.newSession();
var a=Smartgraphs.activityController.get("pages");Smartgraphs.activityPagesController.set("content",a);
if(a.get("length")>0){Smartgraphs.activityPagesController.selectFirstPage()}Smartgraphs.activityPageController.set("content",Smartgraphs.activityPagesController.get("selection"));
Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_PAGE_LOADING)},resourceLoadingError:function(){Smartgraphs.makeFirstResponder(Smartgraphs.ERROR_LOADING_ACTIVITY)
},openActivity:function(b,a){if(a.id===Smartgraphs.activityController.getPath("content.id")){return YES
}Smartgraphs.invokeLater(Smartgraphs.resetFirstResponder);return NO}});Smartgraphs.LOGIN=SC.Responder.create({nextResponder:null,didBecomeFirstResponder:function(){Smartgraphs.userController.set("content",Smartgraphs.store.find(Smartgraphs.User,"default"));
Smartgraphs.makeFirstResponder(Smartgraphs.READY)}});sc_require("states/activity_step");
Smartgraphs.SENSOR=SC.Responder.create({nextResponder:Smartgraphs.ACTIVITY_STEP,didBecomeFirstResponder:function(){var a=Smartgraphs.sensorController.enableInput();
if(!a){Smartgraphs.makeFirstResponder(Smartgraphs.ACTIVITY_STEP)}},willLoseFirstResponder:function(){Smartgraphs.sensorController.disableInput();
Smartgraphs.activityViewController.hideControls()},sensorHasLoaded:function(){Smartgraphs.makeFirstResponder(Smartgraphs.SENSOR_LOADED);
return YES},waitForSensorToLoad:function(){Smartgraphs.makeFirstResponder(Smartgraphs.SENSOR_LOADING);
return YES}});sc_require("states/sensor");Smartgraphs.SENSOR_LOADED=SC.Responder.create({nextResponder:Smartgraphs.SENSOR,didBecomeFirstResponder:function(){Smartgraphs.activityViewController.revealAllControls();
Smartgraphs.activityViewController.showControls(Smartgraphs.sensorController.get("pane"));
Smartgraphs.makeFirstResponder(Smartgraphs.SENSOR_READY)},willLoseFirstResponder:function(){}});
sc_require("states/sensor");Smartgraphs.SENSOR_LOADING=SC.Responder.create({nextResponder:Smartgraphs.SENSOR,didBecomeFirstResponder:function(){Smartgraphs.activityViewController.showSensorLoadingView(Smartgraphs.sensorController.get("pane"))
},willLoseFirstResponder:function(){}});sc_require("states/sensor_loaded");Smartgraphs.SENSOR_READY=SC.Responder.create({nextResponder:Smartgraphs.SENSOR_LOADED,didBecomeFirstResponder:function(){Smartgraphs.activityViewController.highlightStartControl()
},willLoseFirstResponder:function(){},startControlWasClicked:function(){return this.startSensor()
},startSensor:function(){Smartgraphs.makeFirstResponder(Smartgraphs.SENSOR_RECORDING);
return YES}});sc_require("states/sensor_loaded");Smartgraphs.SENSOR_RECORDING=SC.Responder.create({nextResponder:Smartgraphs.SENSOR_LOADED,didBecomeFirstResponder:function(){Smartgraphs.sensorController.startRecording();
Smartgraphs.activityViewController.highlightStopControl()},willLoseFirstResponder:function(){Smartgraphs.sensorController.stopRecording()
},stopControlWasClicked:function(){return this.stopSensor()},stopSensor:function(){Smartgraphs.makeFirstResponder(Smartgraphs.SENSOR_STOPPED);
return YES}});sc_require("states/sensor_loaded");Smartgraphs.SENSOR_STOPPED=SC.Responder.create({nextResponder:Smartgraphs.SENSOR_LOADED,didBecomeFirstResponder:function(){Smartgraphs.activityViewController.highlightClearControl()
},willLoseFirstResponder:function(){},clearControlWasClicked:function(){return this.clearSensor()
},clearSensor:function(){Smartgraphs.sensorController.clearRecordedData();Smartgraphs.makeFirstResponder(Smartgraphs.SENSOR_READY);
return YES}});Smartgraphs.START=SC.Responder.create({nextResponder:null,didBecomeFirstResponder:function(){Smartgraphs.makeFirstResponder(Smartgraphs.LOGIN)
}});Smartgraphs.AxisView=RaphaelViews.RaphaelView.extend({init:function(){if(this.get("type")==="x"){this.set("displayProperties","axes.xMin axes.xMax axes.xSteps axes.xLabel parentView.parentView.frame".w())
}else{this.set("displayProperties","axes.yMin axes.yMax axes.ySteps axes.yLabel parentView.parentView.frame".w())
}arguments.callee.base.apply(this,arguments)},render:function(a,b){if(!b){this.drawAxis();
this.drawLabel()}},didCreateLayer:function(){this._label=null;this.invokeLater(this.drawLabel);
this.invokeLater(this.drawAxis)},drawAxis:function(){if(this._axis){this._axis.remove()
}var h=this.get("axes");if(!h){return}var l=this.getPath("parentView.parentView.parentView.padding");
var c=this.getPath("parentView.parentView.frame");var b=c.x+l.left;var k=c.y+c.height-l.bottom;
if(this.get("type")==="y"){var m=h.get("yMin");var d=h.get("yMax");var g=h.get("ySteps");
var j=c.height-l.top-l.bottom;this._axis=this.get("raphaelCanvas").g.axis(b,k,j,m,d,g,1)
}else{if(this.get("type")==="x"){var a=h.get("xMin");var f=h.get("xMax");var e=h.get("xSteps");
var i=c.width-l.left-l.right;this._axis=this.get("raphaelCanvas").g.axis(b,k,i,a,f,e,0)
}}this._axis.all[0].attr({stroke:"#333333"});this._axis.all[1].attr({fill:"#333333"})
},drawLabel:function(){var e=this.getPath("parentView.parentView.parentView.padding");
var f=this.getPath("parentView.parentView.frame");var d=this.get("axes");if(!d){return
}var c,a,g,b;if(this.get("type")==="x"){c=d.get("xLabel");a=(e.left+f.width-e.right)/2;
g=f.height-15;b=0}else{c=d.get("yLabel");a=10;g=(e.top+f.height-e.bottom)/2;b=270
}if(this._label){this._label.attr({text:c,x:a,y:g})}else{this._label=this.get("raphaelCanvas").text(a,g,c).attr({font:"14px Arial, sans-serif",fill:"#333333"}).rotate(b)
}}});Smartgraphs.GraphView=SC.View.extend({axesBinding:"*graphController.axes",seriesListBinding:"*graphController.seriesList",annotationListBinding:"*graphController.annotationList",padding:{top:15,right:15,bottom:45,left:45},childViews:"titleView graphCanvasView".w(),init:function(){this._viewsByClassAndId={};
arguments.callee.base.apply(this,arguments)},viewDidResize:function(){arguments.callee.base.apply(this,arguments);
this.replaceLayer()},annotationListDidChange:function(){this._itemListsDidChange()
}.observes("*annotationList.[]"),seriesListDidChange:function(){this._itemListsDidChange()
}.observes("*seriesList.[]"),_itemListsDidChange:function(){var g=this.get("seriesList").concat(this.get("annotationList"));
var f,e,h;var a={};for(var c=0,d=g.get("length");c<d;c++){f=g.objectAt(c);e=f.constructor.toString();
h=f.get("id");if(a[e]===undefined){a[e]={}}a[e][h]=f;if(!this._viewsByClassAndId[e]||!this._viewsByClassAndId[e][h]){this._addViewForItem(f)
}}var b;for(e in this._viewsByClassAndId){if(this._viewsByClassAndId.hasOwnProperty(e)){for(h in this._viewsByClassAndId[e]){if(this._viewsByClassAndId[e].hasOwnProperty(h)){b=this._viewsByClassAndId[e][h];
if(!a[e]||!a[e][h]){this._removeView(b)}}}}}},_addViewForItem:function(c){var b=c.constructor.toString();
var a=c.constructor.viewClass.design({graphView:this,item:c}).create();this.get("graphCanvasView").appendChild(a);
if(this._viewsByClassAndId[b]===undefined){this._viewsByClassAndId[b]={}}this._viewsByClassAndId[b][c.get("id")]=a
},_removeView:function(a){var c=a.get("item");var b=c.constructor.toString();var d=c.get("id");
delete this._viewsByClassAndId[b][d];this.get("graphCanvasView").removeChild(a)},coordinatesForPoint:function(l,j){var g=this.get("axes");
if(!g){return undefined}var b=g.get("xMin"),f=g.get("xMax"),n=g.get("yMin"),e=g.get("yMax");
var d=this.get("frame");var o=d.height,a=d.width;var k=this.get("padding");var i=a-k.left-k.right;
var h=o-k.top-k.bottom;var m=i/(f-b);var c=h/(e-n);return{x:k.left+(l-b)*m,y:k.top+h-(j-n)*c}
},pointForCoordinates:function(l,j){var g=this.get("axes");if(!g){return undefined
}var b=g.get("xMin"),f=g.get("xMax"),n=g.get("yMin"),e=g.get("yMax");var d=this.get("frame");
var o=d.height,a=d.width;var k=this.get("padding");var i=a-k.left-k.right;var h=o-k.top-k.bottom;
var m=i/(f-b);var c=h/(e-n);return{x:b+(l-k.left)/m,y:n+(k.top+h-j)/c}},titleView:SC.LabelView.design({valueBinding:".parentView*graphController.title",classNames:"pane-label",layout:{width:400,centerX:0,height:20,top:20,zIndex:1},textAlign:SC.ALIGN_CENTER}),graphCanvasView:RaphaelViews.RaphaelCanvasView.design({layout:{zIndex:0},axesBinding:".parentView.axes",displayProperties:"axes.xMin axes.xMax axes.yMin axes.yMax".w(),childViews:"axesView".w(),axesView:RaphaelViews.RaphaelView.design({axesBinding:".parentView.parentView.axes",paddingBinding:".parentView.parentView.padding",childViews:"inputArea xAxisView yAxisView".w(),inputArea:RaphaelViews.RaphaelView.design({axesBinding:".parentView.parentView.parentView*axes",didCreateLayer:function(){this._graphView=this.getPath("parentView.parentView.parentView");
this._$graphView=this._graphView.$()},renderCallback:function(e,d,b,c,a){return e.rect(d,b,c,a).attr({fill:"#ffffff",stroke:"#ffffff",opacity:0.7})
},render:function(b,a){var d=this.getPath("parentView.parentView.frame");var i=this.getPath("parentView.parentView.parentView.padding");
var c=d.x+i.left;var e=d.y+i.top;var f=d.width-i.left-i.right;var g=d.height-i.top-i.bottom;
if(a){b.callback(this,this.renderCallback,c,e,f,g)}else{var h=b.raphael();h.attr({x:c,y:e,width:f,height:g})
}},coordsForEvent:function(b){var a=this._$graphView.offset();return{x:b.pageX-a.left,y:b.pageY-a.top}
},mouseDown:function(b){this._graphController=this._graphView.get("graphController");
var c=this.coordsForEvent(b);var a=this._graphView.pointForCoordinates(c.x,c.y);return this._graphController.inputAreaMouseDown(a.x,a.y)
},mouseDragged:function(b){var c=this.coordsForEvent(b);var a=this._graphView.pointForCoordinates(c.x,c.y);
return this._graphController.inputAreaMouseDragged(a.x,a.y)},mouseUp:function(b){var c=this.coordsForEvent(b);
var a=this._graphView.pointForCoordinates(c.x,c.y);return this._graphController.inputAreaMouseUp(a.x,a.y)
}}),xAxisView:Smartgraphs.AxisView.design({axesBinding:".parentView.parentView.parentView.axes",type:"x"}),yAxisView:Smartgraphs.AxisView.design({axesBinding:".parentView.parentView.parentView.axes",type:"y"})})})});
Smartgraphs.GraphPane=SC.View.extend({childViews:"graphView controlsContainer".w(),graphView:Smartgraphs.GraphView.design({graphControllerBinding:".parentView.graphController",viewName:"secondGraphPane"}),controlsContainer:SC.ContainerView.design({layout:{bottom:0,height:0}}),controlsNowShowingDidChange:function(){var c=this.get("controlsNowShowing");
var b=0,a=0;if(c){b=35;a=35}this.get("graphView").adjust("bottom",b);this.get("controlsContainer").adjust("height",a);
this.setPath("controlsContainer.nowShowing",c)}.observes("controlsNowShowing")});
Smartgraphs.ImageView=SC.View.extend({});Smartgraphs.QuestionView=SC.StackedView.extend(SC.StaticLayout,{layout:{top:0,left:0,right:0},classNames:["question","open-response-question"],contentDisplayProperties:"prompt".w(),prompt:"[prompt]",useStaticLayout:NO,childViews:"promptView inputView".w(),promptView:SC.LabelView.design(SC.StaticLayout,{classNames:"question-prompt",useStaticLayout:YES,escapeHTML:NO,layout:{left:5,right:5},valueBinding:"*parentView.prompt"}),inputView:SC.View.design(SC.StaticLayout,{layout:{left:20,top:5,width:600,height:95},useStaticLayout:YES,childViews:"textFieldView".w(),textFieldView:SC.TextFieldView.design({classNames:"question-input",isTextArea:YES})})});
Smartgraphs.ResponseTemplateView=SC.StaticContentView.extend({fieldTypes:[],fieldChoicesList:[],values:[],editingShouldBeEnabled:null,isVisibleBinding:SC.Binding.bool(".fieldTypes"),fieldsTypesDidChange:function(){this.clearChildViews();
this.invokeOnce(this.addChildViews)}.observes("fieldTypes"),clearChildViews:function(){this._firstInputFieldView=null;
this.get("childViews").invoke("destroy")},addChildViews:function(){var e=this.get("fieldTypes");
if(!e){return}var c=this.get("fieldChoicesList");var b=this.get("values");var a;for(var d=0,f=e.get("length");
d<f;d++){a=e.objectAt(d);this.addChildView(a,c.objectAt(d),b.objectAt(d),d);if(d===0&&(a==="numeric"||a==="textarea")){this._firstInputFieldView=this.get("childViews").objectAt(0).get("childViews").objectAt(0);
this.invokeLater(this._beginEditingFirstView)}}},addChildView:function(d,b,a,e){var c;
switch(d){case"textarea":c=this.wrap(this.makeTextAreaDesign(a,e),{height:97});break;
case"numeric":c=this.wrap(this.makeNumericFieldDesign(a,e),{height:22,width:100});
break;case"multiplechoice":c=this.makeMultipleChoiceView(b,a,e);break;default:throw"ResponseTemplateView received unexpected field type string '"+d+"'."
}this.appendChild(c)},wrap:function(b,a){return SC.View.design({useStaticLayout:YES,layout:a,classNames:"text-field-view-wrapper".w(),childViews:[b]}).create()
},makeTextAreaDesign:function(a,b){return SC.TextFieldView.design({isTextArea:YES,hint:"Enter your answer here...",fieldIndex:b,value:a,isEnabledBinding:".parentView.parentView.editingShouldBeEnabled",valueDidChange:function(){var c=this.getPath("parentView.parentView.values");
c.replace(this.get("fieldIndex"),1,this.get("value"))}.observes("value")})},makeNumericFieldDesign:function(a,b){return SC.TextFieldView.design({isTextArea:NO,fieldIndex:b,value:a,isEnabledBinding:".parentView.parentView.editingShouldBeEnabled",valueDidChange:function(){var c=this.getPath("parentView.parentView.values");
c.replace(this.get("fieldIndex"),1,this.get("value"))}.observes("value")})},makeMultipleChoiceView:function(b,a,d){var c=[];
c=b.reduce(function(g,f,e){return g.concat({title:f,index:e+1})},[]);return SC.RadioView.design({items:c,itemTitleKey:"title",itemValueKey:"index",fieldIndex:d,value:a,isEnabledBinding:".parentView.editingShouldBeEnabled",useStaticLayout:YES,valueDidChange:function(){var e=this.getPath("parentView.values");
e.replace(this.get("fieldIndex"),1,this.get("value"))}.observes("value")}).create()
},_beginEditingFirstView:function(){if(this._firstInputFieldView){this._firstInputFieldView.beginEditing()
}}});Smartgraphs.TableView=SC.View.extend({});Smartgraphs.activityPage=SC.Page.design({activityView:SC.View.design({childViews:"instructionsWrapper dataWrapper".w(),loadingMessage:"Loading Activity...",instructionsWrapper:SC.View.design({layout:{left:0,width:0.5},childViews:"instructionsView".w(),instructionsView:SC.View.design({layout:{right:5,top:0,bottom:0},classNames:"smartgraph-pane",childViews:"textWrapper nextButton pageInfo".w(),textWrapper:SC.View.design({layout:{top:20,right:20,bottom:70,left:20},classNames:"text-wrapper".w(),childViews:"introText activityStepWrapper".w(),introText:SC.StaticContentView.design({contentBinding:SC.Binding.oneWay("Smartgraphs.activityPageController.introText"),isVisibleBinding:SC.Binding.bool("Smartgraphs.activityPageController.introText")}),activityStepWrapper:SC.View.design({useStaticLayout:YES,childViews:"activityStepDialog buttonsView".w(),activityStepDialog:SC.View.design({useStaticLayout:YES,childViews:"beforeText responseTemplate afterText".w(),classNames:"dialog-text".w(),beforeText:SC.StaticContentView.design({contentBinding:SC.Binding.oneWay("Smartgraphs.activityStepController.beforeText"),isVisibleBinding:SC.Binding.bool("Smartgraphs.activityStepController.beforeText")}),responseTemplate:Smartgraphs.ResponseTemplateView.design({fieldTypesBinding:"Smartgraphs.responseTemplateController.fieldTypes",fieldChoicesListBinding:"Smartgraphs.responseTemplateController.fieldChoicesList",valuesBinding:"Smartgraphs.responseTemplateController.values",editingShouldBeEnabledBinding:"Smartgraphs.responseTemplateController.editingShouldBeEnabled"}),afterText:SC.StaticContentView.design({contentBinding:SC.Binding.oneWay("Smartgraphs.activityStepController.afterText"),isVisibleBinding:SC.Binding.bool("Smartgraphs.activityStepController.afterText")})}),buttonsView:SC.View.design({useStaticLayout:YES,layout:{height:24},childViews:"submitButton".w(),submitButton:SC.ButtonView.design({layout:{width:80,right:0},titleBinding:"Smartgraphs.activityStepController.submitButtonTitle",isVisibleBinding:"Smartgraphs.activityViewController.showSubmitButton",isEnabledBinding:"Smartgraphs.activityViewController.enableSubmitButton",isDefaultBinding:"Smartgraphs.activityViewController.enableSubmitButton",action:"submitStep"})})})}),nextButton:SC.ButtonView.design({layout:{right:30,bottom:36,height:24,width:110},title:"Next Page >>",action:"gotoNextPage",isVisibleBinding:"Smartgraphs.activityViewController.showNextPageButton",isEnabledBinding:"Smartgraphs.activityViewController.enableNextPageButton",isDefaultBinding:"Smartgraphs.activityViewController.enableNextPageButton"}),pageInfo:SC.LabelView.design({classNames:"pane-label",layout:{bottom:36,left:30,height:24,width:200},valueBinding:"Smartgraphs.activityPagesController.pageInfo",isVisible:YES})})}),dataWrapper:SC.View.design({layout:{right:0,width:0.5},childViews:"dataView".w(),dataView:SC.ContainerView.design({layout:{left:5},nowShowingBinding:"Smartgraphs.activityViewController.dataViewNowShowing"})})}),singlePaneDataView:SC.ContainerView.design({classNames:"smartgraph-pane",nowShowingBinding:"Smartgraphs.activityViewController.singlePaneNowShowing"}),splitPaneDataView:SC.View.design({childViews:"topPaneWrapper bottomPaneWrapper".w(),topPaneWrapper:SC.View.design({layout:{top:0,height:0.5},childViews:"topPane".w(),topPane:SC.ContainerView.design({layout:{bottom:5},classNames:"smartgraph-pane",nowShowingBinding:"Smartgraphs.activityViewController.topPaneNowShowing"})}),bottomPaneWrapper:SC.View.design({layout:{bottom:0,height:0.5},childViews:"bottomPane".w(),bottomPane:SC.ContainerView.design({layout:{top:5},classNames:"smartgraph-pane",nowShowingBinding:"Smartgraphs.activityViewController.bottomPaneNowShowing"})})}),firstImageView:SC.ImageView.design({useStaticLayout:YES,valueBinding:"Smartgraphs.activityViewController.firstImageValue",layout:{width:0.9999999,height:0.9999999}}),secondImageView:SC.ImageView.design({useStaticLayout:YES,valueBinding:"Smartgraphs.activityViewController.secondImageValue",layout:{width:0.9999999,height:0.9999999}}),firstGraphPane:Smartgraphs.GraphPane.design({graphControllerBinding:"Smartgraphs.firstGraphController",controlsNowShowingBinding:"Smartgraphs.activityViewController.firstGraphPaneControls"}),secondGraphPane:Smartgraphs.GraphPane.design({graphControllerBinding:"Smartgraphs.secondGraphController",controlsNowShowingBinding:"Smartgraphs.activityViewController.secondGraphPaneControls"}),firstTableView:Smartgraphs.TableView.design({}),secondTableView:Smartgraphs.TableView.design({}),errorLoadingActivityView:SC.View.design({classNames:"smartgraph-pane",childViews:"errorMessage".w(),errorMessage:SC.LabelView.design({layout:{height:32,width:500,centerX:0,centerY:0},classNames:"error",textAlign:SC.ALIGN_CENTER,value:"There was an error loading that Activity."})}),graphControlsView:SC.View.design({layout:{height:35},childViews:"startControl stopControl clearControl".w(),startControl:SC.ButtonView.design({layout:{centerX:-110,bottom:10,width:80,height:24},isVisibleBinding:"Smartgraphs.activityViewController.startControlIsVisible",isEnabledBinding:"Smartgraphs.activityViewController.startControlIsEnabled",isDefaultBinding:"Smartgraphs.activityViewController.startControlIsDefault",title:"Start",action:"startControlWasClicked"}),stopControl:SC.ButtonView.design({layout:{centerX:0,bottom:10,width:80,height:24},isVisibleBinding:"Smartgraphs.activityViewController.stopControlIsVisible",isEnabledBinding:"Smartgraphs.activityViewController.stopControlIsEnabled",isDefaultBinding:"Smartgraphs.activityViewController.stopControlIsDefault",title:"Stop",action:"stopControlWasClicked"}),clearControl:SC.ButtonView.design({layout:{centerX:110,bottom:10,width:80,height:24},isVisibleBinding:"Smartgraphs.activityViewController.clearControlIsVisible",isEnabledBinding:"Smartgraphs.activityViewController.clearControlIsEnabled",isDefaultBinding:"Smartgraphs.activityViewController.clearControlIsDefault",title:"Reset",action:"clearControlWasClicked"})}),sensorLoadingView:SC.LabelView.design({layout:{height:35},classNames:"sensor-message".w(),textAlign:SC.ALIGN_CENTER,value:"Please wait, the sensor is loading..."})});
Smartgraphs.appletPage=SC.Page.design({sensorAppletView:CC.SensorAppletView.design({layout:{width:1,height:1},listenerPath:"Smartgraphs.sensorController"})});
Smartgraphs.mainPage=SC.Page.design({mainPane:SC.MainPane.design({layout:{minWidth:960,minHeight:600},childViews:"container".w(),defaultResponder:"Smartgraphs",container:SC.ContainerView.design({layout:{top:15,right:20,bottom:15,left:20},nowShowingBinding:"Smartgraphs.appWindowController.nowShowing"})}),loadingView:SC.View.design({classNames:"smartgraph-pane".w(),childViews:"loadingIconView loadingMessageView".w(),loadingIconView:SC.ImageView.design({layout:{width:48,height:48,centerX:0,centerY:-39},value:"/static/smartgraphs/es/7e639bc282b33bfb863a8c7d2319650bef43bf05/resources/pane_loading.gif"}),loadingMessageView:SC.LabelView.design({classNames:"loading".w(),layout:{width:200,height:24,centerX:0,centerY:15},textAlign:SC.ALIGN_CENTER,valueBinding:"Smartgraphs.appWindowController.loadingMessage"})})});
Smartgraphs.main=function main(){Smartgraphs.dataSource=SC.CascadeDataSource.create({dataSources:"rest fixtures".w(),rest:Smartgraphs.RestDataSource.create(),fixtures:SC.FixturesDataSource.create({simulateRemoteResponse:NO,latency:500})});
Smartgraphs.store=SC.Store.create().from(Smartgraphs.dataSource);Smartgraphs.getPath("mainPage.mainPane").append();
if(!window.location.hash){window.location.hash="/backend/activity/1"}window.onbeforeunload=function(){return"You will lose your place in the activity if you leave this page."
};Smartgraphs.makeFirstResponder(Smartgraphs.START)};function main(){Smartgraphs.main()
};